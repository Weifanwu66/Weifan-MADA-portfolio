---
title: "Fitting"
author: "Weifan Wu"
editor: visual
output: html_document
date: "02/25/2023"
---

#Main continous outcome of interest is `Body Temperature`, and main categorical outcome is `Nausea` #Load Library

```{r}
library(tidyverse)
library(here)
library(skimr)
library(tidymodels)
library(glmnet)
```

#Load Data

```{r}
data_location=here::here("fluanalysis","data","processed_data.rds")
exp_data=readRDS(file=data_location)
```

#Check Data

```{r}
head(exp_data)
skim(exp_data)
```

#Fitting models

# Linear Regression Model

## Model `BodyTemp`based on `RunnyNose`

```{r}
set.seed(123)
Temp_split=initial_split(exp_data,strata = BodyTemp)
Temp_train=training(Temp_split)
Temp_test=testing(Temp_split)
#cross validation
set.seed(234)
Temp_folds=vfold_cv(Temp_train,strata=BodyTemp)
#set an engine for linear regression model
lm_spec=linear_reg()%>%set_engine("lm")%>%set_mode("regression")
#building model using recipe
rec_Temp=recipe(BodyTemp~RunnyNose,data=Temp_train)
wf_Temp=workflow(rec_Temp,lm_spec)
#resampling
doParallel::registerDoParallel()
ctrl_preds=control_resamples(save_pred = TRUE)
rs_Temp=fit_resamples(wf_Temp,Temp_folds,control=ctrl_preds)
linear_pred=augment(rs_Temp)
#checking the R^2 for models
rs_Temp_metrics <- linear_pred %>% 
                     metrics(truth = !!sym("BodyTemp"), estimate = .pred)
t1=rs_Temp_metrics%>%
  rename("RunnyNose_Estimate"=".estimate")
```

## Model `BodyTemp` based on all predictors

```{r}
set.seed(123)
Temp_split=initial_split(exp_data,strata = BodyTemp)
Temp_train=training(Temp_split)
Temp_test=testing(Temp_split)

# Cross Validation
set.seed(234)
Temp_folds=vfold_cv(Temp_train,strata=BodyTemp)

#linear regression model Setup
lm_spec=linear_reg()%>%set_engine("lm")%>%set_mode("regression")
rec_Temp1=recipe(BodyTemp~.,data=Temp_train)
wf_Temp1=workflow(rec_Temp1,lm_spec)

# Resampling
doParallel::registerDoParallel()
ctrl_preds=control_resamples(save_pred = TRUE)
rs_Temp1=fit_resamples(wf_Temp1,Temp_folds,control=ctrl_preds)

# Checking the model accuracy
t2=augment(rs_Temp1)%>%
metrics(truth = !!sym("BodyTemp"), estimate = .pred)%>%
  rename("All_Predictors_Estimate"=".estimate")%>%select(3)

t2

# Compare the model accuracy estimates of three models together in compare_Temp_table
Compare_table_1=t1%>%
  bind_cols(t2)
Compare_table_1
```

From the table we can conclude that the model explains the more (R\^2=4.8%) variations of BodyTemp when it includes all the interested predictors than when it only concludes RunnyNose as predictor (R\^2=0.7%).

# Logistic Regression Model

## Model `Nausea`based on `RunnyNose`

```{r}
#Setting training and testing data 
set.seed(123)
sym_split=initial_split(exp_data,strata = Nausea)
sym_train=training(sym_split)
sym_test=testing(sym_split)

# Cross Validation 
set.seed(234)
sym_folds=vfold_cv(sym_train,strata=Nausea)

# Logistic Regression Model Setup
glm_spec=logistic_reg()%>%
  set_engine("glm")%>%
  set_mode("classification")
rec_basic=recipe(Nausea~RunnyNose,data=sym_train)
wf_basic=workflow(rec_basic,glm_spec)

# Resampling
doParallel::registerDoParallel()
ctrl_preds=control_resamples(save_pred = TRUE)
rs_basic=fit_resamples(wf_basic,sym_folds,control=ctrl_preds)
logistic_pred=augment(rs_basic)

# Checking the model metrics
rs_basic_metrics <- logistic_pred %>% 
                     metrics(truth = !!sym("Nausea"), estimate = .pred_class)
est1=rs_basic_metrics%>%
  rename("RunnyNose.estimate"=".estimate")
est1
```

## Build a model using all predictors.

```{r}
set.seed(123)
sym_split=initial_split(exp_data,strata = Nausea)
sym_train=training(sym_split)
sym_test=testing(sym_split)
#cross validation
set.seed(234)
sym_folds=vfold_cv(sym_train,strata=Nausea)
#logistic regression model
glm_spec=logistic_reg()%>%
  set_engine("glm")%>%
  set_mode("classification")
rec_basic1=recipe(Nausea~.,data=sym_train)
  #step_dummy(all_nominal_predictors())
wf_basic1=workflow(rec_basic1,glm_spec)

# Resampling
doParallel::registerDoParallel()
ctrl_preds=control_resamples(save_pred = TRUE)
rs_basic1=fit_resamples(wf_basic1,sym_folds,control=ctrl_preds)

# Checking the model accuracy
est2=augment(rs_basic1)%>%
metrics(truth = !!sym("Nausea"), estimate = .pred_class)%>%
  rename("All_Predictors_No_interact_Estimate"=".estimate")%>%select(3)

est2

# Compare the model accuracy estimates of two models together in compare_table
Compare_table_2=est1%>%
  bind_cols(est2)
Compare_table_2
```

This table indicates that when model is trained based on all predictors, it has higher accuracy than the model that is trained based on RunnyNose.
