{
  "hash": "c90a60360fa1d242538491157983e7f1",
  "result": {
    "markdown": "---\ntitle: \"model evaluation\"\nauthor: \"Weifan Wu\"\neditor: visual\noutput: html_document\ndate: \"03/20/2023\"\n---\n\n\n## Main categorical outcome is `Nausea`\n\n### Load Library\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/weifa/OneDrive/Documents/GitKraken/MADA/data analysis/Weifan-MADA-portfolio\n```\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.3     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.1.0     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n```\n:::\n\n```{.r .cell-code}\nlibrary(glmnet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nLoaded glmnet 4.1-6\n```\n:::\n:::\n\n\n### Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_location=here::here(\"fluanalysis\",\"data\",\"processed_data.rds\")\nexp_data=readRDS(file=data_location)\n```\n:::\n\n\n### Check Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(exp_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  SwollenLymphNodes ChestCongestion ChillsSweats NasalCongestion Sneeze Fatigue\n1               Yes              No           No              No     No     Yes\n2               Yes             Yes           No             Yes     No     Yes\n3               Yes             Yes          Yes             Yes    Yes     Yes\n4               Yes             Yes          Yes             Yes    Yes     Yes\n5               Yes              No          Yes              No     No     Yes\n6                No              No          Yes              No    Yes     Yes\n  SubjectiveFever Headache Weakness CoughIntensity  Myalgia RunnyNose AbPain\n1             Yes      Yes     Mild         Severe     Mild        No     No\n2             Yes      Yes   Severe         Severe   Severe        No     No\n3             Yes      Yes   Severe           Mild   Severe       Yes    Yes\n4             Yes      Yes   Severe       Moderate   Severe       Yes     No\n5             Yes      Yes Moderate           None     Mild        No     No\n6             Yes      Yes Moderate       Moderate Moderate        No     No\n  ChestPain Diarrhea EyePn Insomnia ItchyEye Nausea EarPn Hearing Pharyngitis\n1        No       No    No       No       No     No    No      No         Yes\n2        No       No    No       No       No     No   Yes     Yes         Yes\n3       Yes       No    No      Yes       No    Yes    No      No         Yes\n4        No       No    No      Yes       No    Yes   Yes      No         Yes\n5        No       No   Yes      Yes       No    Yes    No      No         Yes\n6       Yes      Yes    No       No       No    Yes    No      No         Yes\n  Breathless ToothPn Vision Vomit Wheeze BodyTemp\n1         No      No     No    No     No     98.3\n2         No      No     No    No     No    100.4\n3        Yes     Yes     No    No     No    100.8\n4         No      No     No    No    Yes     98.8\n5         No      No     No    No     No    100.5\n6        Yes      No     No    No    Yes     98.4\n```\n:::\n\n```{.r .cell-code}\nskim(exp_data)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |         |\n|:------------------------|:--------|\n|Name                     |exp_data |\n|Number of rows           |730      |\n|Number of columns        |28       |\n|_______________________  |         |\n|Column type frequency:   |         |\n|factor                   |27       |\n|numeric                  |1        |\n|________________________ |         |\n|Group variables          |None     |\n\n\n**Variable type: factor**\n\n|skim_variable     | n_missing| complete_rate|ordered | n_unique|top_counts                            |\n|:-----------------|---------:|-------------:|:-------|--------:|:-------------------------------------|\n|SwollenLymphNodes |         0|             1|FALSE   |        2|No: 418, Yes: 312                     |\n|ChestCongestion   |         0|             1|FALSE   |        2|Yes: 407, No: 323                     |\n|ChillsSweats      |         0|             1|FALSE   |        2|Yes: 600, No: 130                     |\n|NasalCongestion   |         0|             1|FALSE   |        2|Yes: 563, No: 167                     |\n|Sneeze            |         0|             1|FALSE   |        2|Yes: 391, No: 339                     |\n|Fatigue           |         0|             1|FALSE   |        2|Yes: 666, No: 64                      |\n|SubjectiveFever   |         0|             1|FALSE   |        2|Yes: 500, No: 230                     |\n|Headache          |         0|             1|FALSE   |        2|Yes: 615, No: 115                     |\n|Weakness          |         0|             1|FALSE   |        4|Mod: 338, Mil: 223, Sev: 120, Non: 49 |\n|CoughIntensity    |         0|             1|FALSE   |        4|Mod: 357, Sev: 172, Mil: 154, Non: 47 |\n|Myalgia           |         0|             1|FALSE   |        4|Mod: 325, Mil: 213, Sev: 113, Non: 79 |\n|RunnyNose         |         0|             1|FALSE   |        2|Yes: 519, No: 211                     |\n|AbPain            |         0|             1|FALSE   |        2|No: 639, Yes: 91                      |\n|ChestPain         |         0|             1|FALSE   |        2|No: 497, Yes: 233                     |\n|Diarrhea          |         0|             1|FALSE   |        2|No: 631, Yes: 99                      |\n|EyePn             |         0|             1|FALSE   |        2|No: 617, Yes: 113                     |\n|Insomnia          |         0|             1|FALSE   |        2|Yes: 415, No: 315                     |\n|ItchyEye          |         0|             1|FALSE   |        2|No: 551, Yes: 179                     |\n|Nausea            |         0|             1|FALSE   |        2|No: 475, Yes: 255                     |\n|EarPn             |         0|             1|FALSE   |        2|No: 568, Yes: 162                     |\n|Hearing           |         0|             1|FALSE   |        2|No: 700, Yes: 30                      |\n|Pharyngitis       |         0|             1|FALSE   |        2|Yes: 611, No: 119                     |\n|Breathless        |         0|             1|FALSE   |        2|No: 436, Yes: 294                     |\n|ToothPn           |         0|             1|FALSE   |        2|No: 565, Yes: 165                     |\n|Vision            |         0|             1|FALSE   |        2|No: 711, Yes: 19                      |\n|Vomit             |         0|             1|FALSE   |        2|No: 652, Yes: 78                      |\n|Wheeze            |         0|             1|FALSE   |        2|No: 510, Yes: 220                     |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|  mean|  sd|   p0|  p25|  p50|  p75|  p100|hist  |\n|:-------------|---------:|-------------:|-----:|---:|----:|----:|----:|----:|-----:|:-----|\n|BodyTemp      |         0|             1| 98.94| 1.2| 97.2| 98.2| 98.5| 99.3| 103.1|▇▇▂▁▁ |\n:::\n\n```{.r .cell-code}\nview(exp_data)\n```\n:::\n\n### Ordinal predictors: Weakness, CoughIntensity, Myalgia\n### Data splitting\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Splitting the data with outcome Nausea distributed evenly in training and testing data\nset.seed(123)\nnausea_split=initial_split(exp_data,strata = Nausea)\nnausea_train=training(nausea_split)\nnausea_test=testing(nausea_split)\n```\n:::\n\n\n### Creating workflow and fitting model using all predictors\n### data preprocessing using recipe function\n\n::: {.cell}\n\n```{.r .cell-code}\nnausea_rec=recipe(Nausea~.,data=nausea_train)\nnausea_rec\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n   outcome          1\n predictor         27\n```\n:::\n\n```{.r .cell-code}\nlr_mod=logistic_reg()%>%\n  set_engine(\"glm\")\nnausea_workflow=workflow()%>%\n  add_model(lr_mod)%>%\n  add_recipe(nausea_rec)\nnausea_workflow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: logistic_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLogistic Regression Model Specification (classification)\n\nComputational engine: glm \n```\n:::\n\n```{.r .cell-code}\nnausea_fit=nausea_workflow%>%\n  fit(data=nausea_train)\nnausea_fit%>%\n  extract_fit_parsnip()%>%\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 34 × 5\n   term                 estimate std.error statistic p.value\n   <chr>                   <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)           2.29        9.39     0.244    0.807\n 2 SwollenLymphNodesYes  0.0156      0.227    0.0687   0.945\n 3 ChestCongestionYes    0.317       0.244    1.30     0.193\n 4 ChillsSweatsYes       0.00783     0.331    0.0237   0.981\n 5 NasalCongestionYes    0.421       0.294    1.43     0.152\n 6 SneezeYes             0.186       0.247    0.752    0.452\n 7 FatigueYes            0.252       0.438    0.576    0.564\n 8 SubjectiveFeverYes    0.319       0.266    1.20     0.230\n 9 HeadacheYes           0.00852     0.311    0.0274   0.978\n10 WeaknessMild         -0.433       0.502   -0.863    0.388\n# … with 24 more rows\n```\n:::\n:::\n\n\n### Use the trained workflow to predict both training and testing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(nausea_fit,nausea_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 547 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 537 more rows\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_train=augment(nausea_fit,nausea_train)\nnausea_aug_train%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\nℹ The deprecated feature was likely used in the yardstick package.\n  Please report the issue at <https://github.com/tidymodels/yardstick/issues>.\n```\n:::\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\npredict(nausea_fit,nausea_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 Yes        \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 Yes        \n10 Yes        \n# … with 173 more rows\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test=augment(nausea_fit,nausea_test)\nnausea_aug_test%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Using roc_auc ()to estimate the area under the curve\nnausea_aug_train%>%\n  roc_auc(truth=Nausea,.pred_No)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.789\n```\n:::\n\n```{.r .cell-code}\npredict(nausea_fit,nausea_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 Yes        \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 Yes        \n10 Yes        \n# … with 173 more rows\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test=augment(nausea_fit,nausea_test)\nnausea_aug_test%>%\n  roc_auc(truth=Nausea,.pred_No)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.723\n```\n:::\n:::\n\n\n### Creating workflow and fitting model using the main predictor (`RunnyNose`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(234)\nnausea_rec2=recipe(Nausea~RunnyNose,data=nausea_train)\nlr_mod=logistic_reg()%>%\n  set_engine(\"glm\")\nnausea_workflow2=workflow()%>%\n  add_model(lr_mod)%>%\n  add_recipe(nausea_rec2)\nnausea_workflow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: logistic_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLogistic Regression Model Specification (classification)\n\nComputational engine: glm \n```\n:::\n\n```{.r .cell-code}\nnausea_fit2=nausea_workflow2%>%\n  fit(data=nausea_train)\nnausea_fit2%>%\n  extract_fit_parsnip()%>%\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  -0.629       0.165   -3.80   0.000145\n2 RunnyNoseYes  0.00843     0.197    0.0428 0.966   \n```\n:::\n:::\n\n\n### Use the trained workflow to predict both training and testing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(nausea_fit2,nausea_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 547 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 537 more rows\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_train2=augment(nausea_fit2,nausea_train)\nnausea_aug_train2%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\npredict(nausea_fit2,nausea_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 173 more rows\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test2=augment(nausea_fit2,nausea_test)\nnausea_aug_test2%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Using roc_auc ()to estimate the area under the curve\nnausea_aug_train2%>%\n  roc_auc(truth=Nausea,.pred_No)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.501\n```\n:::\n\n```{.r .cell-code}\npredict(nausea_fit2,nausea_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 173 more rows\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test2=augment(nausea_fit2,nausea_test)\nnausea_aug_test2%>%\n  roc_auc(truth=Nausea,.pred_No)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.518\n```\n:::\n:::\n\n\n#### Overall, the model built and trained based on all predictors has a higher roc_auc than that built and trained based on the main predictor `RunnyNose`. Specifically, the a roc_auc of 0.72 was obtained when the full-model predicted testing data and 0.79 when it predicted the training data. In contrast, a roc_auc close to 0.5 (no use) was achieved when only the main predictor was used in the model.\n",
    "supporting": [
      "modeleval_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}