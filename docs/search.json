[
  {
    "objectID": "fluanalysis/code/modeleval.html",
    "href": "fluanalysis/code/modeleval.html",
    "title": "model evaluation",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   0.3.5\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.2.1     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(here)\n\nhere() starts at /Users/jacobmatta/Desktop/Weifan-MADA-portfolio\n\nlibrary(skimr)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.3     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.3\n✔ modeldata    1.1.0     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.4     ✔ yardstick    1.1.0\n✔ recipes      1.0.3     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(glmnet)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nLoaded glmnet 4.1-7\n\n\n\n\n\n\ndata_location=here::here(\"fluanalysis\",\"data\",\"processed_data.rds\")\nexp_data=readRDS(file=data_location)\n\n\n\n\n\nhead(exp_data)\n\n  SwollenLymphNodes ChestCongestion ChillsSweats NasalCongestion Sneeze Fatigue\n1               Yes              No           No              No     No     Yes\n2               Yes             Yes           No             Yes     No     Yes\n3               Yes             Yes          Yes             Yes    Yes     Yes\n4               Yes             Yes          Yes             Yes    Yes     Yes\n5               Yes              No          Yes              No     No     Yes\n6                No              No          Yes              No    Yes     Yes\n  SubjectiveFever Headache Weakness CoughIntensity  Myalgia RunnyNose AbPain\n1             Yes      Yes     Mild         Severe     Mild        No     No\n2             Yes      Yes   Severe         Severe   Severe        No     No\n3             Yes      Yes   Severe           Mild   Severe       Yes    Yes\n4             Yes      Yes   Severe       Moderate   Severe       Yes     No\n5             Yes      Yes Moderate           None     Mild        No     No\n6             Yes      Yes Moderate       Moderate Moderate        No     No\n  ChestPain Diarrhea EyePn Insomnia ItchyEye Nausea EarPn Hearing Pharyngitis\n1        No       No    No       No       No     No    No      No         Yes\n2        No       No    No       No       No     No   Yes     Yes         Yes\n3       Yes       No    No      Yes       No    Yes    No      No         Yes\n4        No       No    No      Yes       No    Yes   Yes      No         Yes\n5        No       No   Yes      Yes       No    Yes    No      No         Yes\n6       Yes      Yes    No       No       No    Yes    No      No         Yes\n  Breathless ToothPn Vision Vomit Wheeze BodyTemp\n1         No      No     No    No     No     98.3\n2         No      No     No    No     No    100.4\n3        Yes     Yes     No    No     No    100.8\n4         No      No     No    No    Yes     98.8\n5         No      No     No    No     No    100.5\n6        Yes      No     No    No    Yes     98.4\n\nskim(exp_data)\n\n\nData summary\n\n\nName\nexp_data\n\n\nNumber of rows\n730\n\n\nNumber of columns\n28\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n27\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nSwollenLymphNodes\n0\n1\nFALSE\n2\nNo: 418, Yes: 312\n\n\nChestCongestion\n0\n1\nFALSE\n2\nYes: 407, No: 323\n\n\nChillsSweats\n0\n1\nFALSE\n2\nYes: 600, No: 130\n\n\nNasalCongestion\n0\n1\nFALSE\n2\nYes: 563, No: 167\n\n\nSneeze\n0\n1\nFALSE\n2\nYes: 391, No: 339\n\n\nFatigue\n0\n1\nFALSE\n2\nYes: 666, No: 64\n\n\nSubjectiveFever\n0\n1\nFALSE\n2\nYes: 500, No: 230\n\n\nHeadache\n0\n1\nFALSE\n2\nYes: 615, No: 115\n\n\nWeakness\n0\n1\nFALSE\n4\nMod: 338, Mil: 223, Sev: 120, Non: 49\n\n\nCoughIntensity\n0\n1\nFALSE\n4\nMod: 357, Sev: 172, Mil: 154, Non: 47\n\n\nMyalgia\n0\n1\nFALSE\n4\nMod: 325, Mil: 213, Sev: 113, Non: 79\n\n\nRunnyNose\n0\n1\nFALSE\n2\nYes: 519, No: 211\n\n\nAbPain\n0\n1\nFALSE\n2\nNo: 639, Yes: 91\n\n\nChestPain\n0\n1\nFALSE\n2\nNo: 497, Yes: 233\n\n\nDiarrhea\n0\n1\nFALSE\n2\nNo: 631, Yes: 99\n\n\nEyePn\n0\n1\nFALSE\n2\nNo: 617, Yes: 113\n\n\nInsomnia\n0\n1\nFALSE\n2\nYes: 415, No: 315\n\n\nItchyEye\n0\n1\nFALSE\n2\nNo: 551, Yes: 179\n\n\nNausea\n0\n1\nFALSE\n2\nNo: 475, Yes: 255\n\n\nEarPn\n0\n1\nFALSE\n2\nNo: 568, Yes: 162\n\n\nHearing\n0\n1\nFALSE\n2\nNo: 700, Yes: 30\n\n\nPharyngitis\n0\n1\nFALSE\n2\nYes: 611, No: 119\n\n\nBreathless\n0\n1\nFALSE\n2\nNo: 436, Yes: 294\n\n\nToothPn\n0\n1\nFALSE\n2\nNo: 565, Yes: 165\n\n\nVision\n0\n1\nFALSE\n2\nNo: 711, Yes: 19\n\n\nVomit\n0\n1\nFALSE\n2\nNo: 652, Yes: 78\n\n\nWheeze\n0\n1\nFALSE\n2\nNo: 510, Yes: 220\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nBodyTemp\n0\n1\n98.94\n1.2\n97.2\n98.2\n98.5\n99.3\n103.1\n▇▇▂▁▁\n\n\n\n\n\n\n\n\n\n\n\n\n## Splitting the data with outcome Nausea distributed evenly in training and testing data\nset.seed(123)\nnausea_split=initial_split(exp_data,strata = Nausea)\nnausea_train=training(nausea_split)\nnausea_test=testing(nausea_split)\n\n\n\n\n\n\n\n\nnausea_rec=recipe(Nausea~.,data=nausea_train)\nnausea_rec\n\nRecipe\n\nInputs:\n\n      role #variables\n   outcome          1\n predictor         27\n\nlr_mod=logistic_reg()%>%\n  set_engine(\"glm\")\nnausea_workflow=workflow()%>%\n  add_model(lr_mod)%>%\n  add_recipe(nausea_rec)\nnausea_workflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: logistic_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLogistic Regression Model Specification (classification)\n\nComputational engine: glm \n\nnausea_fit=nausea_workflow%>%\n  fit(data=nausea_train)\nnausea_fit%>%\n  extract_fit_parsnip()%>%\n  tidy()\n\n# A tibble: 34 × 5\n   term                 estimate std.error statistic p.value\n   <chr>                   <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)           2.29        9.39     0.244    0.807\n 2 SwollenLymphNodesYes  0.0156      0.227    0.0687   0.945\n 3 ChestCongestionYes    0.317       0.244    1.30     0.193\n 4 ChillsSweatsYes       0.00783     0.331    0.0237   0.981\n 5 NasalCongestionYes    0.421       0.294    1.43     0.152\n 6 SneezeYes             0.186       0.247    0.752    0.452\n 7 FatigueYes            0.252       0.438    0.576    0.564\n 8 SubjectiveFeverYes    0.319       0.266    1.20     0.230\n 9 HeadacheYes           0.00852     0.311    0.0274   0.978\n10 WeaknessMild         -0.433       0.502   -0.863    0.388\n# … with 24 more rows\n\n\n\n\n\n\npredict(nausea_fit,nausea_train)\n\n# A tibble: 547 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 537 more rows\n\nnausea_aug_train=augment(nausea_fit,nausea_train)\nnausea_aug_train%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\nℹ The deprecated feature was likely used in the yardstick package.\n  Please report the issue at <\u001b]8;;https://github.com/tidymodels/yardstick/issues\u0007https://github.com/tidymodels/yardstick/issues\u001b]8;;\u0007>.\n\n\n\n\npredict(nausea_fit,nausea_test)\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 Yes        \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 Yes        \n10 Yes        \n# … with 173 more rows\n\nnausea_aug_test=augment(nausea_fit,nausea_test)\nnausea_aug_test%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n\n\n\n# Using roc_auc ()to estimate the area under the curve\nnausea_aug_train%>%\n  roc_auc(truth=Nausea,.pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.789\n\npredict(nausea_fit,nausea_test)\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 Yes        \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 Yes        \n10 Yes        \n# … with 173 more rows\n\nnausea_aug_test=augment(nausea_fit,nausea_test)\nnausea_aug_test%>%\n  roc_auc(truth=Nausea,.pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.723\n\n\n\n\n\n\nset.seed(234)\nnausea_rec2=recipe(Nausea~RunnyNose,data=nausea_train)\nlr_mod=logistic_reg()%>%\n  set_engine(\"glm\")\nnausea_workflow2=workflow()%>%\n  add_model(lr_mod)%>%\n  add_recipe(nausea_rec2)\nnausea_workflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: logistic_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLogistic Regression Model Specification (classification)\n\nComputational engine: glm \n\nnausea_fit2=nausea_workflow2%>%\n  fit(data=nausea_train)\nnausea_fit2%>%\n  extract_fit_parsnip()%>%\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  -0.629       0.165   -3.80   0.000145\n2 RunnyNoseYes  0.00843     0.197    0.0428 0.966   \n\n\n\n\n\n\npredict(nausea_fit2,nausea_train)\n\n# A tibble: 547 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 537 more rows\n\nnausea_aug_train2=augment(nausea_fit2,nausea_train)\nnausea_aug_train2%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n\n\n\npredict(nausea_fit2,nausea_test)\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 173 more rows\n\nnausea_aug_test2=augment(nausea_fit2,nausea_test)\nnausea_aug_test2%>%\n  roc_curve(truth=Nausea,.pred_No)%>%\n  autoplot()\n\n\n\n# Using roc_auc ()to estimate the area under the curve\nnausea_aug_train2%>%\n  roc_auc(truth=Nausea,.pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.501\n\npredict(nausea_fit2,nausea_test)\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 173 more rows\n\nnausea_aug_test2=augment(nausea_fit2,nausea_test)\nnausea_aug_test2%>%\n  roc_auc(truth=Nausea,.pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.518"
  },
  {
    "objectID": "fluanalysis/code/modeleval.html#creating-model-fit-using-the-outcome-of-interest-and-all-of-the-predictors",
    "href": "fluanalysis/code/modeleval.html#creating-model-fit-using-the-outcome-of-interest-and-all-of-the-predictors",
    "title": "model evaluation",
    "section": "Creating model fit using the outcome of interest and all of the predictors",
    "text": "Creating model fit using the outcome of interest and all of the predictors\n\nCreating workflow and fitting model using all predictors and our continuos outcome which is body temperature\n\n#creating recipe for body temperature and all of the predictors \nBodyTemp_rec=recipe(BodyTemp~., data=BodyTemp_train)\nln_mod=linear_reg()%>%\n  set_engine(\"lm\")\n#creating a bodytemp workflow \nBodyTemp_workflow=workflow()%>%\n  add_model(ln_mod)%>%\n  add_recipe(BodyTemp_rec)\nBodyTemp_workflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\n#creating a body temp fit by adding the body temp training data \nBodyTemp_fit=BodyTemp_workflow%>%\n  fit(data=BodyTemp_train)\nBodyTemp_fit%>%\n  extract_fit_parsnip()%>%\n  tidy()\n\n# A tibble: 34 × 5\n   term                 estimate std.error statistic  p.value\n   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>\n 1 (Intercept)           97.8        0.361   271.    0       \n 2 SwollenLymphNodesYes  -0.123      0.108    -1.14  0.255   \n 3 ChestCongestionYes     0.0658     0.114     0.578 0.564   \n 4 ChillsSweatsYes        0.138      0.148     0.933 0.351   \n 5 NasalCongestionYes    -0.137      0.132    -1.04  0.300   \n 6 SneezeYes             -0.392      0.117    -3.34  0.000909\n 7 FatigueYes             0.403      0.192     2.10  0.0362  \n 8 SubjectiveFeverYes     0.429      0.118     3.64  0.000300\n 9 HeadacheYes           -0.0732     0.153    -0.479 0.632   \n10 WeaknessMild           0.0901     0.220     0.409 0.683   \n# … with 24 more rows\n\n\n\n\nUse the trained workflow to predict both training and testing data\n\nTrain_predictions = predict(BodyTemp_fit, BodyTemp_train)\nBodyTemp_aug_train = augment(BodyTemp_fit,BodyTemp_train)\nTest_predictions =predict(BodyTemp_fit, BodyTemp_test)\nBodyTemp_aug_test = augment(BodyTemp_fit,BodyTemp_test)\n\n#library\n\nlibrary(Metrics)\n\n\nAttaching package: 'Metrics'\n\n\nThe following objects are masked from 'package:yardstick':\n\n    accuracy, mae, mape, mase, precision, recall, rmse, smape\n\n\n\n\nExamining the RMSE for both models\n\nrmse_train = rmse(actual = BodyTemp_aug_train$BodyTemp, predicted =  BodyTemp_aug_train$.pred)\n        \nrmse_test = rmse(actual = BodyTemp_aug_test$BodyTemp, predicted =  BodyTemp_aug_test$.pred)     \nrmse_train\n\n[1] 1.110229\n\nrmse_test\n\n[1] 1.165801"
  },
  {
    "objectID": "fluanalysis/code/modeleval.html#creating-a-model-for-the-outcome-of-interest-and-our-predictor-of-interest",
    "href": "fluanalysis/code/modeleval.html#creating-a-model-for-the-outcome-of-interest-and-our-predictor-of-interest",
    "title": "model evaluation",
    "section": "Creating a model for the outcome of interest and our predictor of interest",
    "text": "Creating a model for the outcome of interest and our predictor of interest\n\n#creating recipe for body temperature and all of the predictors \nBodyTemp_rec2 =recipe(BodyTemp~RunnyNose, data=BodyTemp_train)\n#creating linear model for outcome and predictor of interest\nln_mod2=linear_reg()%>%\n  set_engine(\"lm\")\n#creating a bodytemp workflow \nBodyTemp_workflow2 =workflow()%>%\n  add_model(ln_mod2)%>%\n  add_recipe(BodyTemp_rec2)\nBodyTemp_workflow2\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\n#creating a body temp fit by adding the body temp training data \nBodyTemp_fit2 =BodyTemp_workflow2%>%\n  fit(data=BodyTemp_train)\nBodyTemp_fit2 %>%\n  extract_fit_parsnip()%>%\n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    99.1      0.0948   1046.   0      \n2 RunnyNoseYes   -0.304    0.112      -2.71 0.00700\n\n\n\nUse the trained workflow to predict both training and testing data\n\nTrain_predictions2 = predict(BodyTemp_fit2, BodyTemp_train)\nBodyTemp_aug_train2 = augment(BodyTemp_fit2,BodyTemp_train)\nTest_predictions2 =predict(BodyTemp_fit2, BodyTemp_test)\nBodyTemp_aug_test2 = augment(BodyTemp_fit2,BodyTemp_test)\n\n\n\nExamining the RMSE for both models\n\nrmse_train2 = rmse(actual = BodyTemp_aug_train2$BodyTemp, predicted =  BodyTemp_aug_train2$.pred)\n        \nrmse_test2 = rmse(actual = BodyTemp_aug_test2$BodyTemp, predicted =  BodyTemp_aug_test2$.pred)     \nrmse_train2\n\n[1] 1.185314\n\nrmse_test2\n\n[1] 1.196568"
  }
]