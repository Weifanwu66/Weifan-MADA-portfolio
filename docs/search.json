[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "https://www.linkedin.com/in/weifan-wu-78604a162/\n\nBasic information\nHello everyone, my name is Weifan Wu. I am currently a third-year Ph.D. student in food science and technology. My focus is about antimicrobial activity of pomegranate against common foodborne pathogens. Welcome to connect me on Linkedin!😄\n\n\nStatistical experience\nI was first exposed to statistics due to the requirement of program of study, however, I have gradually developed deep interest in statistical analysis, especially when it’s applied to data in public health area. The statistics courses I have taken include experimental design, applied data analysis using SPSS, spatial epidemiology. Last year, I independently accomplished a spatial analysis of association of race and age with COVID-19 incidence rates on the county-level in Georgia using Bayesian spatial hierarchical generalized Linear model and disease mapping. I also use SAS to conduct basic statistics analysis (general linear model, pearson’s r) for my own research project. Therefore, I have knowledge of statistics and some experience with data analysis using softwares such as R, SPSS, SAS. Since my interests mainly lie with public health data , I would like to gain more in-depth experience with handling real-world public health data using R, which is something that I am looking forward to getting from this course.🥳\n\n\nFun fact about me\nmy eyebrows can dance!🤣\n\n\nUnknown facts about data science\nThe attached linked is about 7 surprising facts about data science. The most striking fact is that less than 0.5% of all data we create is ever analysed and used.\nhttps://www.lewagon.com/blog/data-science-facts"
  },
  {
    "objectID": "exercise/code/analysis_code/coding_exercise.html",
    "href": "exercise/code/analysis_code/coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "loading and checking data\n\n#load dslabs package\nlibrary(\"dslabs\")\n#load tidyverse package\nlibrary(\"tidyverse\")\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n#look at help file for gapminder data\nhelp(gapminder)\n\nstarting httpd help server ... done\n\n#get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#get a summary of data structure\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#determine type of objective gapminder is\nclass(gapminder)\n\n[1] \"data.frame\"\n\n\nprocessing data\n\n#assign African countries to a new object\nafricadata=filter(gapminder,continent==\"Africa\")\n#get an overview of data structure of africadata\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of data structure\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n#create a data frame that only contains infant_mortality and life_expectancy from africadata\ninfant_mortality_longevity=select(africadata,infant_mortality,life_expectancy)\n#create a data frame that only contains population and life_expectancy\npop_longevity=select(africadata,population,life_expectancy)\n#create a data frame that only contains infant_mortality and life_expectancy from africadata\ninfant_mortality_longevity=select(africadata,infant_mortality,life_expectancy)\n#create a data frame that only contains population and life_expectancy\npop_longevity=select(africadata,population,life_expectancy)\n\nplotting\n\n#plot life expectancy as a function of infant mortality\nggplot(data=infant_mortality_longevity)+\ngeom_point(mapping=aes(x=infant_mortality,y=life_expectancy),color=\"blue\")+\n  labs(title=\"life expectancy and infant mortality\",x=\"infant mortality\",y=\"life expectancy\")+\n  theme_minimal()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n#plot life expectancy as a function of population size\nggplot(data=pop_longevity)+\n  geom_point(mapping=aes(x=population, y=life_expectancy),color=\"green\")+\n  scale_x_log10()+\n  labs(title=\"life expectancy and infant mortality\",x=\"infant_mortality\",y=\"life expectancy\")+\n  theme_minimal()\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n#filter out the year without missing values and create a data frame contains the year and count\ndataframe=filter(africadata,is.na(infant_mortality))%>%\n  group_by(year)%>%\n  count(year)\ndataframe\n\n# A tibble: 23 × 2\n# Groups:   year [23]\n    year     n\n   <int> <int>\n 1  1960    10\n 2  1961    17\n 3  1962    16\n 4  1963    16\n 5  1964    15\n 6  1965    14\n 7  1966    13\n 8  1967    11\n 9  1968    11\n10  1969     7\n# … with 13 more rows\n\n#create a new data frame containg the data for the year 2000\nyear2000=filter(africadata,year==2000)\n#get a overview of new data frame year2000\nstr(year2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of year2000\nsummary(year2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\n\n#plotting the relationship between life expectancy and infant mortality for year 2000\nyear2000%>%\n  ggplot()+\n  geom_point(aes(y=life_expectancy,x=infant_mortality),color=\"blue\")+\n  labs(x=\"infant mortality\", y=\"life expectancy\", title=\"relationship between infant mortality and life expectancy\")+\n  theme_minimal()\n\n\n\n#plotting the relationship between life expectancy and population size for year 2000\nyear2000%>%\n  ggplot()+\n  geom_point(aes(y=life_expectancy,x=population),color=\"green\",alpha=0.5)+\n  scale_x_log10()+\n  labs(x=\"population size on log scale\",y=\"life expectancy\", title=\"relationship between life expectancy and populaton size\")+\n  theme_minimal()\n\n\n\n\nbuild a linear regression model to predict life expectancy\n\n#build a linear model using lm function and fit life expectancy as outcome, and infant mortality as the predictor\nlm1=lm(life_expectancy~infant_mortality,data=year2000)\n#summary of linear regression model 1\nsummary(lm1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = year2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      71.29331    2.42611  29.386  < 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n#build a linear model using lm function and fit life expectancy as outcome, and population size as the predictor\nlm2=lm(life_expectancy~population,data=year2000)\n#summary of linear regression model 1\nbroom::tidy(lm2,conf.int=TRUE)%>%\n  knitr::kable(digits=3)\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\nconf.low\nconf.high\n\n\n\n\n(Intercept)\n55.931\n1.468\n38.097\n0.000\n52.981\n58.881\n\n\npopulation\n0.000\n0.000\n0.505\n0.616\n0.000\n0.000\n\n\n\n\n\nbased on the p_value for each fit, we can see that infant mortality can significantly predict life expectancy whereas population size can not predict the life expectancy\n\n\n\n\n\n\nAidan Troha Edits\n\n\n::: {.cell}\n\n\n```{.r .cell-code} # Creates a new data frame which removes rows without reported gdp data & # groups based on region africa_GDP <- africadata %>% filter(!(is.na(gdp))) %>% group_by(region)\n\n\n# Plots a “LOESS” model predicting log-scale GDP over time by region ggplot(africa_GDP,aes(x=year,y=log(gdp),color=region,fill=region)) + geom_smooth(alpha=0.15) + labs(y=“Log scale GDP”,title=“GDP Growth Over 50 Year Period by Region”) ```\n\n\n::: {.cell-output .cell-output-stderr}\n\n\n::: {.cell-output-display}  ::: :::\n\n\n::: {.cell}\n\n\n{.r .cell-code} # Plots a violin plot displaying the distribution of life expectancies # according to region ggplot(aes(region,life_expectancy,fill=region),data=africa_GDP)+ geom_violin() + scale_x_discrete(labels = NULL, breaks = NULL) + labs(x=NULL,y=\"Life Expectancy\",title=\"Life Expectancy Distributed by Region\")\n\n\n::: {.cell-output-display}  ::: :::\n\n\n::: {.cell}\n\n\n```{.r .cell-code} # Fits a linear regression model using log-scale gdp to predict life expectancy lm3 <- lm(life_expectancy~log(gdp),data=africa_GDP)\n\n\n#summary of linear regression model 3 summary(lm3) ```\n\n\n::: {.cell-output .cell-output-stdout} ```\n\n\nCall: lm(formula = life_expectancy ~ log(gdp), data = africa_GDP)\n\n\nResiduals: Min 1Q Median 3Q Max -38.967 -5.343 -0.774 4.519 21.213\n\n\nCoefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 14.9595 2.3599 6.339 2.78e-10  log(gdp) 1.8162 0.1086 16.721 < 2e-16 \n\n\n\nSignif. codes: 0 ‘’ 0.001 ’’ 0.01 ’’ 0.05 ‘.’ 0.1 ’ ’ 1\nResidual standard error: 7.93 on 2268 degrees of freedom Multiple R-squared: 0.1097, Adjusted R-squared: 0.1094 F-statistic: 279.6 on 1 and 2268 DF, p-value: < 2.2e-16 ``` ::: :::"
  },
  {
    "objectID": "exercise/code/data_processing_code/dataanalysis_exercise.html",
    "href": "exercise/code/data_processing_code/dataanalysis_exercise.html",
    "title": "data analysis exercise",
    "section": "",
    "text": "#data description This data set was found on data.cdc.gov. The data set contains the information regarding the reported botulism cases, a national notifiable disease, reported in the United states. There are five variables presented in the header: State, Year, BotType (the type of transmission), ToxinType (the type of toxin), and Count (reported cases)\n#Setup load packages\n#data loading\n#checking data\n#data cleaning after checking the data, R consider the numbers under Year as regular numbers (double), so we need to change it to character; Also, I consider Count as the outcome of interest, ToxinType & BotType might associate with the outcome in certain way. I am also interested in the spread of botulism-infection cases in the states and in different years.\n#save data"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "The data set this week is Hollywood Age Gaps setup\n\nlibrary(skimr)\nlibrary(plotly)\n\nLoading required package: ggplot2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2\n──\n\n\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n✔ purrr   1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks plotly::filter(), stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggstatsplot)\n\nYou can cite this package as:\n     Patil, I. (2021). Visualizations with statistical details: The 'ggstatsplot' approach.\n     Journal of Open Source Software, 6(61), 3167, doi:10.21105/joss.03167\n\nlibrary(ggbeeswarm)\nlibrary(ggtext)\n\ndownload data\n\nage_gaps <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv')\n\nRows: 1155 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): movie_name, director, actor_1_name, actor_2_name, character_1_gend...\ndbl  (5): release_year, age_difference, couple_number, actor_1_age, actor_2_age\ndate (2): actor_1_birthdate, actor_2_birthdate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(age_gaps)\n\nRows: 1,155\nColumns: 13\n$ movie_name         <chr> \"Harold and Maude\", \"Venus\", \"The Quiet American\", …\n$ release_year       <dbl> 1971, 2006, 2002, 1998, 2010, 1992, 2009, 1999, 199…\n$ director           <chr> \"Hal Ashby\", \"Roger Michell\", \"Phillip Noyce\", \"Joe…\n$ age_difference     <dbl> 52, 50, 49, 45, 43, 42, 40, 39, 38, 38, 36, 36, 35,…\n$ couple_number      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ actor_1_name       <chr> \"Ruth Gordon\", \"Peter O'Toole\", \"Michael Caine\", \"D…\n$ actor_2_name       <chr> \"Bud Cort\", \"Jodie Whittaker\", \"Do Thi Hai Yen\", \"T…\n$ character_1_gender <chr> \"woman\", \"man\", \"man\", \"man\", \"man\", \"man\", \"man\", …\n$ character_2_gender <chr> \"man\", \"woman\", \"woman\", \"woman\", \"man\", \"woman\", \"…\n$ actor_1_birthdate  <date> 1896-10-30, 1932-08-02, 1933-03-14, 1930-09-17, 19…\n$ actor_2_birthdate  <date> 1948-03-29, 1982-06-03, 1982-10-01, 1975-11-08, 19…\n$ actor_1_age        <dbl> 75, 74, 69, 68, 81, 59, 62, 69, 57, 77, 59, 56, 65,…\n$ actor_2_age        <dbl> 23, 24, 20, 23, 38, 17, 22, 30, 19, 39, 23, 20, 30,…\n\nstr(age_gaps)  #checking the data structure\n\nspc_tbl_ [1,155 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ movie_name        : chr [1:1155] \"Harold and Maude\" \"Venus\" \"The Quiet American\" \"The Big Lebowski\" ...\n $ release_year      : num [1:1155] 1971 2006 2002 1998 2010 ...\n $ director          : chr [1:1155] \"Hal Ashby\" \"Roger Michell\" \"Phillip Noyce\" \"Joel Coen\" ...\n $ age_difference    : num [1:1155] 52 50 49 45 43 42 40 39 38 38 ...\n $ couple_number     : num [1:1155] 1 1 1 1 1 1 1 1 1 1 ...\n $ actor_1_name      : chr [1:1155] \"Ruth Gordon\" \"Peter O'Toole\" \"Michael Caine\" \"David Huddleston\" ...\n $ actor_2_name      : chr [1:1155] \"Bud Cort\" \"Jodie Whittaker\" \"Do Thi Hai Yen\" \"Tara Reid\" ...\n $ character_1_gender: chr [1:1155] \"woman\" \"man\" \"man\" \"man\" ...\n $ character_2_gender: chr [1:1155] \"man\" \"woman\" \"woman\" \"woman\" ...\n $ actor_1_birthdate : Date[1:1155], format: \"1896-10-30\" \"1932-08-02\" ...\n $ actor_2_birthdate : Date[1:1155], format: \"1948-03-29\" \"1982-06-03\" ...\n $ actor_1_age       : num [1:1155] 75 74 69 68 81 59 62 69 57 77 ...\n $ actor_2_age       : num [1:1155] 23 24 20 23 38 17 22 30 19 39 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   movie_name = col_character(),\n  ..   release_year = col_double(),\n  ..   director = col_character(),\n  ..   age_difference = col_double(),\n  ..   couple_number = col_double(),\n  ..   actor_1_name = col_character(),\n  ..   actor_2_name = col_character(),\n  ..   character_1_gender = col_character(),\n  ..   character_2_gender = col_character(),\n  ..   actor_1_birthdate = col_date(format = \"\"),\n  ..   actor_2_birthdate = col_date(format = \"\"),\n  ..   actor_1_age = col_double(),\n  ..   actor_2_age = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\nskim(age_gaps) #checking missing values and some descriptive stats\n\n\nData summary\n\n\nName\nage_gaps\n\n\nNumber of rows\n1155\n\n\nNumber of columns\n13\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nDate\n2\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmovie_name\n0\n1\n2\n43\n0\n830\n0\n\n\ndirector\n0\n1\n3\n31\n0\n510\n0\n\n\nactor_1_name\n0\n1\n6\n22\n0\n567\n0\n\n\nactor_2_name\n0\n1\n7\n27\n0\n647\n0\n\n\ncharacter_1_gender\n0\n1\n3\n5\n0\n2\n0\n\n\ncharacter_2_gender\n0\n1\n3\n5\n0\n2\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nactor_1_birthdate\n0\n1\n1889-04-16\n1996-06-01\n1964-10-03\n562\n\n\nactor_2_birthdate\n0\n1\n1906-10-06\n1996-11-11\n1974-07-30\n640\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrelease_year\n0\n1\n2000.80\n16.37\n1935\n1997\n2004\n2012\n2022\n▁▁▁▆▇\n\n\nage_difference\n0\n1\n10.42\n8.51\n0\n4\n8\n15\n52\n▇▃▂▁▁\n\n\ncouple_number\n0\n1\n1.40\n0.75\n1\n1\n1\n2\n7\n▇▁▁▁▁\n\n\nactor_1_age\n0\n1\n40.64\n10.42\n18\n33\n39\n47\n81\n▂▇▅▂▁\n\n\nactor_2_age\n0\n1\n30.21\n7.50\n17\n25\n29\n34\n68\n▇▇▂▁▁\n\n\n\n\n\nAfter looking at the variables, the interesting questions I could think of include 1.Is there any pattern of age difference throughout the years (e.g. increasing age difference as time goes by)? 2. Are males always older than females as Hollywood couples? 3. Is there any same-gender couple with age difference? 4. Is age difference associated with directors (preference). 5. Which actors (actresses) always play characters who are involved in romantic relationships with age gap? Since the column names are clean, the data structure seems correct, and there is no missing value, it seems like the author who cleaned this data did a good job. We can start to explore some data. exploratory data analysis report\n\n#first, let's explore age difference by years\nggscatterstats(data=age_gaps,x=release_year,y=age_difference,type=\"np\")\n\nRegistered S3 method overwritten by 'ggside':\n  method from   \n  +.gg   ggplot2\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n#it seems like as time goes by, the age gap significantly decreases, let see if there are difference between genders (male is older v.s. female is older)\ngrouped_ggscatterstats(\n  data=age_gaps,x=release_year,y=age_difference,grouping.var=character_1_gender,type=\"np\",\n  caption.text=\"change of age difference in a relationship thoughout years group by the gender of the older actor\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n#from this plot, we can clearly see that the number of older males are way more than that of female in relationships with age gaps. Also, the age difference is significantly reduced as time goes by in relationships when males are older, but it's not significant in the relationships when females are older.\n\nThere are more relationships with older males than older females throughout the years, even though the age difference has significantly reduced for relationships with older males. However, is there any same sex couple? Will there be any similar pattern for the same sex couples?\n\nmale_couple=age_gaps%>%\n  filter(character_1_gender==\"man\",character_2_gender==\"man\")\n\nfemale_couple=age_gaps%>%\n  filter(character_1_gender==\"woman\",character_2_gender==\"woman\")\nmale_couple\n\n# A tibble: 12 × 13\n   movie_name    relea…¹ direc…² age_d…³ coupl…⁴ actor…⁵ actor…⁶ chara…⁷ chara…⁸\n   <chr>           <dbl> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>  \n 1 Beginners        2010 Mike M…      43       1 Christ… Goran … man     man    \n 2 A Single Man     2009 Tom Fo…      29       1 Colin … Nichol… man     man    \n 3 Behind the C…    2013 Steven…      26       1 Michae… Matt D… man     man    \n 4 A Single Man     2009 Tom Fo…      18       2 Colin … Matthe… man     man    \n 5 Milk             2008 Gus Va…      18       1 Sean P… James … man     man    \n 6 Rock of Ages     2012 Adam S…      17       1 Alec B… Russel… man     man    \n 7 The Normal H…    2014 Ryan M…      10       1 Mark R… Matt B… man     man    \n 8 Call Me by Y…    2017 Luca G…       9       1 Armie … Timoth… man     man    \n 9 I Love You P…    2009 Glenn …       9       1 Jim Ca… Ewan M… man     man    \n10 Boogie Nights    1997 Paul T…       4       3 Philip… Mark W… man     man    \n11 Brokeback Mo…    2005 Ang Lee       1       2 Heath … Jake G… man     man    \n12 The Family S…    2007 Thomas…       1       6 Brian … Tyrone… man     man    \n# … with 4 more variables: actor_1_birthdate <date>, actor_2_birthdate <date>,\n#   actor_1_age <dbl>, actor_2_age <dbl>, and abbreviated variable names\n#   ¹​release_year, ²​director, ³​age_difference, ⁴​couple_number, ⁵​actor_1_name,\n#   ⁶​actor_2_name, ⁷​character_1_gender, ⁸​character_2_gender\n\nfemale_couple\n\n# A tibble: 11 × 13\n   movie_name    relea…¹ direc…² age_d…³ coupl…⁴ actor…⁵ actor…⁶ chara…⁷ chara…⁸\n   <chr>           <dbl> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>  \n 1 Freeheld         2015 Peter …      27       1 Julian… Elliot… woman   woman  \n 2 Chloe            2009 Atom E…      25       1 Julian… Amanda… woman   woman  \n 3 Carol            2015 Todd H…      16       1 Cate B… Rooney… woman   woman  \n 4 The Favourite    2018 Yorgos…      14       1 Olivia… Emma S… woman   woman  \n 5 In the Heigh…    2021 John M…      12       1 Daphne… Stepha… woman   woman  \n 6 Blue Is The …    2013 Abdell…       8       1 Léa Se… Adèle … woman   woman  \n 7 Monster          2003 Patty …       5       1 Charli… Christ… woman   woman  \n 8 Professor Ma…    2017 Angela…       5       2 Rebecc… Bella … woman   woman  \n 9 The Favourite    2018 Yorgos…       4       3 Rachel… Olivia… woman   woman  \n10 Imagine Me &…    2005 Ol Par…       3       1 Lena H… Piper … woman   woman  \n11 The Kids Are…    2010 Lisa C…       2       2 Annett… Julian… woman   woman  \n# … with 4 more variables: actor_1_birthdate <date>, actor_2_birthdate <date>,\n#   actor_1_age <dbl>, actor_2_age <dbl>, and abbreviated variable names\n#   ¹​release_year, ²​director, ³​age_difference, ⁴​couple_number, ⁵​actor_1_name,\n#   ⁶​actor_2_name, ⁷​character_1_gender, ⁸​character_2_gender\n\n\nSo we did find same sex couples, let’s see if there are any interesting pattern for them\n\nggscatterstats(data=male_couple,x=release_year,y=age_difference,type=\"np\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nggscatterstats(data=female_couple,x=release_year,y=age_difference,type=\"np\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nInterestingly, for same sex couples, the age difference has slightly increased (p>0.05) throughout the years. Even though, it appeared on the screen fairly recently (after 1997) and the sample size is really small. Let’s see if there’s any director who has directed multiple movies with big-age-difference romantic relationships (over 20 years).\n\ndirector_pref=age_gaps%>%\n  select(director,age_difference)%>%\n  filter(age_difference>20)%>%\n  count(director)%>%\n  filter(n>1)%>%\n  arrange(desc(n))\ndirector_pref\n\n# A tibble: 21 × 2\n   director             n\n   <chr>            <int>\n 1 Woody Allen          9\n 2 John Glen            8\n 3 Alfred Hitchcock     5\n 4 Guy Hamilton         4\n 5 Howard Hawks         3\n 6 John Huston          3\n 7 Adrian Lyne          2\n 8 Charlie Chaplin      2\n 9 Eli Roth             2\n10 Joel Coen            2\n# … with 11 more rows\n\n\nSo, out of over a thousand movies, there are 21 directors who like to direct movies with romantic relationships of over 20-year age difference more than once. Woody Allen ranked No.1 Let’s look into details.\n\n#get all the information that we need for these 21 directors from age_gaps\ndirector_chara=inner_join(age_gaps,director_pref,by=\"director\")\n\n  \nplot=director_chara%>%\n  ggplot(aes(x=director,y=age_difference,color=character_1_gender))+\n  geom_boxplot(varwidth=TRUE,lwd=0.6,color=\"gray\")+\n  geom_quasirandom(width=0.5,varwidth=TRUE,size=3)+\n  stat_summary(fun=median,fun.min=median,fun.max=median,geom=\"crossbar\",width=0.2,linewidth=1.8,fatten=1,color=\"red\")+\n  theme(text=element_text(size=22))+\n  guides(color = guide_legend(title = \"gender of the older actor\"))+\n  scale_x_discrete(guide = guide_axis(n.dodge=3))+\n  geom_hline(yintercept=20)\nplot\n\n\n\nggsave(\"plot.pdf\", width = 18, height = 10, units = \"in\")\n\nRoger Michell directed the movie that included romantic relationship with the largest age-gap. All the directors directed more movies with elder males, which is in accordance with the overall result. Let’s explore if there is any actors (actress) who always play roles involved in this type of relationship\n\nactor_older=age_gaps%>%\n  select(actor_1_name,age_difference)%>%\n  filter(age_difference>20)%>%\n  count(actor_1_name)%>%\n  filter(n>2)%>%\n  arrange(desc(n))\nactor_younger=age_gaps%>%\n  select(actor_2_name,age_difference)%>%\n  filter(age_difference>20)%>%\n  count(actor_2_name)%>%\n  filter(n>1)%>%\n  arrange(desc(n))\nactor_older\n\n# A tibble: 14 × 2\n   actor_1_name          n\n   <chr>             <int>\n 1 Roger Moore          12\n 2 Humphrey Bogart       7\n 3 Woody Allen           5\n 4 Robert Redford        4\n 5 Cary Grant            3\n 6 Denzel Washington     3\n 7 Harrison Ford         3\n 8 Jack Nicholson        3\n 9 Johnny Depp           3\n10 Julianne Moore        3\n11 Paul Newman           3\n12 Richard Gere          3\n13 Robert De Niro        3\n14 Sean Connery          3\n\nactor_younger\n\n# A tibble: 14 × 2\n   actor_2_name             n\n   <chr>                <int>\n 1 Audrey Hepburn           5\n 2 Grace Kelly              5\n 3 Lauren Bacall            4\n 4 Keira Knightley          3\n 5 Alison Doody             2\n 6 Amanda Seyfried          2\n 7 Emily Blunt              2\n 8 Emma Stone               2\n 9 Gwyneth Paltrow          2\n10 Julia Ormond             2\n11 Kristin Scott Thomas     2\n12 Paulette Goddard         2\n13 Rosamund Pike            2\n14 Scarlett Johansson       2\n\n\nFrom the tables, we can see Roger Moore has played an older man in a relationship for 12 times, Audrey Hepburn played a younger female for 5 times.Let’s see the age of each actors when they played the role\nFinally, let’s dive into making some interactive plots, I want to plot the age of younger actor on y axis and the age of the older actor of the couple on x-axis. Since the numbers on x axis are older, the points should fall under y=x. The label include the name of each movie.\n\nage_gaps%>%\n ggplot(aes(x=actor_1_age,y=actor_2_age,text=movie_name,color=character_1_gender))+\n  geom_point()+\n  geom_abline(intercept =0,slope=1)+\n  theme_bw()+\n  labs(title=\"The age difference in each movie group by the gender of the older actor\",x=\"the age of the older actor\",y=\"age of the younger actor\")+\n  guides(color = guide_legend(title = \"gender of the older actor\"))\n\n\n\nggplotly()"
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "The plot that I try to reproduce here is from fivethirtyeight.com. The marriage isn’t dead-yet. It depicts the divorce rates by education in the age group from 35 to 44\n\nsetup\n\nlibrary(ggtext)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(here)\n\nhere() starts at C:/Users/weifa/OneDrive/Documents/GitKraken/MADA/data analysis/Weifan-MADA-portfolio\n\n\nimport data and glimpse data\n\ndataLocation=here(\"marriage\",\"divorce.csv\")\nrawData=read.csv(dataLocation)\nglimpse(rawData)\n\nRows: 17\nColumns: 21\n$ X         <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17\n$ year      <int> 1960, 1970, 1980, 1990, 2000, 2001, 2002, 2003, 2004, 2005, …\n$ date      <chr> \"1960-01-01\", \"1970-01-01\", \"1980-01-01\", \"1990-01-01\", \"200…\n$ all_3544  <dbl> 0.03444454, 0.04925600, 0.10600503, 0.15080495, 0.15684099, …\n$ HS_3544   <dbl> 0.03488887, 0.04999984, 0.10415128, 0.15938095, 0.17544616, …\n$ SC_3544   <dbl> 0.03366938, 0.04870549, 0.11269947, 0.16967005, 0.17380324, …\n$ BAp_3544  <dbl> 0.02751277, 0.04125945, 0.09777208, 0.11495533, 0.10561772, …\n$ BAo_3544  <dbl> 0.02751277, 0.04125945, 0.09777208, 0.11853432, 0.11053969, …\n$ GD_3544   <dbl> NA, NA, NA, 0.10914537, 0.09590347, 0.09719692, 0.09076255, …\n$ poor_3544 <dbl> 0.07195136, 0.11373582, 0.24164705, 0.32694839, 0.34308859, …\n$ mid_3544  <dbl> 0.02122530, 0.03030104, 0.07367154, 0.11190969, 0.11658371, …\n$ rich_3544 <dbl> 0.02256233, 0.02192707, 0.03501521, 0.04972527, 0.04939497, …\n$ all_4554  <dbl> 0.03965056, 0.05062562, 0.08818511, 0.14572572, 0.17958060, …\n$ HS_4554   <dbl> 0.04007142, 0.05056576, 0.08566351, 0.14077914, 0.18477676, …\n$ SC_4554   <dbl> 0.03870331, 0.05147270, 0.09500947, 0.16633103, 0.20110350, …\n$ BAp_4554  <dbl> 0.03188568, 0.04831053, 0.09103488, 0.13436974, 0.14904161, …\n$ BAo_4554  <dbl> 0.03188568, 0.04831053, 0.09103488, 0.13566093, 0.15369313, …\n$ GD_4554   <dbl> NA, NA, NA, 0.1327413, 0.1425498, 0.1417453, 0.1367771, 0.14…\n$ poor_4554 <dbl> 0.07537252, 0.11249624, 0.19867321, 0.30661378, 0.38213542, …\n$ mid_4554  <dbl> 0.02933657, 0.03386947, 0.06300866, 0.11498064, 0.14224209, …\n$ rich_4554 <dbl> 0.02350489, 0.02123280, 0.02791567, 0.04577501, 0.05152510, …\n\n\ndata wrangling\n\n#select the columns that contain the information that we need for plotting, which is year, HS_3544, SC_3544, and BAp_3544\nedu_div=rawData%>%\n  select(c(2,5:7))\n#reshape the dataset, combine all the educational levels under \"educational_level\" variable and their respective values under \"divorce\" variable\nedu_div1=edu_div%>%\n  gather(key=\"education_level\",value=\"divorce\",2:4)\nedu_div1\n\n   year education_level    divorce\n1  1960         HS_3544 0.03488887\n2  1970         HS_3544 0.04999984\n3  1980         HS_3544 0.10415128\n4  1990         HS_3544 0.15938095\n5  2000         HS_3544 0.17544616\n6  2001         HS_3544 0.17411604\n7  2002         HS_3544 0.17476931\n8  2003         HS_3544 0.17254483\n9  2004         HS_3544 0.17756455\n10 2005         HS_3544 0.17516353\n11 2006         HS_3544 0.18943673\n12 2007         HS_3544 0.18721641\n13 2008         HS_3544 0.18837663\n14 2009         HS_3544 0.18698758\n15 2010         HS_3544 0.18989580\n16 2011         HS_3544 0.19239892\n17 2012         HS_3544 0.19020633\n18 1960         SC_3544 0.03366938\n19 1970         SC_3544 0.04870549\n20 1980         SC_3544 0.11269947\n21 1990         SC_3544 0.16967005\n22 2000         SC_3544 0.17380324\n23 2001         SC_3544 0.17816906\n24 2002         SC_3544 0.17929419\n25 2003         SC_3544 0.17697536\n26 2004         SC_3544 0.17707955\n27 2005         SC_3544 0.17674265\n28 2006         SC_3544 0.18412098\n29 2007         SC_3544 0.18496086\n30 2008         SC_3544 0.18944998\n31 2009         SC_3544 0.19013626\n32 2010         SC_3544 0.19726945\n33 2011         SC_3544 0.20045883\n34 2012         SC_3544 0.20317649\n35 1960        BAp_3544 0.02751277\n36 1970        BAp_3544 0.04125945\n37 1980        BAp_3544 0.09777208\n38 1990        BAp_3544 0.11495533\n39 2000        BAp_3544 0.10561772\n40 2001        BAp_3544 0.10703886\n41 2002        BAp_3544 0.10344219\n42 2003        BAp_3544 0.10254990\n43 2004        BAp_3544 0.10033665\n44 2005        BAp_3544 0.09948066\n45 2006        BAp_3544 0.10383550\n46 2007        BAp_3544 0.10392942\n47 2008        BAp_3544 0.10201919\n48 2009        BAp_3544 0.10194261\n49 2010        BAp_3544 0.10306385\n50 2011        BAp_3544 0.10776053\n51 2012        BAp_3544 0.10740666\n\n#remove strings \"_3544\" since we have already chosen the age groups beforehand, recode the levels to make table more intuitive, And mutate divorce rate to percentage\nedu_div2=edu_div1%>%\n  mutate(education_level=str_replace(string=education_level,pattern=\"_3544\",replacement=\"\"))%>%\n  mutate(education_level=recode(education_level,\"HS\"=\"High school or less\",\"SC\"=\"Some college\", \"BAp\"=\"College graduates\"))%>%\n  mutate(divorce=divorce*100)\nedu_div2\n\n   year     education_level   divorce\n1  1960 High school or less  3.488887\n2  1970 High school or less  4.999984\n3  1980 High school or less 10.415128\n4  1990 High school or less 15.938095\n5  2000 High school or less 17.544616\n6  2001 High school or less 17.411604\n7  2002 High school or less 17.476931\n8  2003 High school or less 17.254483\n9  2004 High school or less 17.756455\n10 2005 High school or less 17.516353\n11 2006 High school or less 18.943673\n12 2007 High school or less 18.721641\n13 2008 High school or less 18.837663\n14 2009 High school or less 18.698758\n15 2010 High school or less 18.989580\n16 2011 High school or less 19.239892\n17 2012 High school or less 19.020633\n18 1960        Some college  3.366938\n19 1970        Some college  4.870549\n20 1980        Some college 11.269947\n21 1990        Some college 16.967005\n22 2000        Some college 17.380324\n23 2001        Some college 17.816906\n24 2002        Some college 17.929419\n25 2003        Some college 17.697536\n26 2004        Some college 17.707955\n27 2005        Some college 17.674265\n28 2006        Some college 18.412098\n29 2007        Some college 18.496086\n30 2008        Some college 18.944998\n31 2009        Some college 19.013626\n32 2010        Some college 19.726945\n33 2011        Some college 20.045883\n34 2012        Some college 20.317649\n35 1960   College graduates  2.751277\n36 1970   College graduates  4.125945\n37 1980   College graduates  9.777208\n38 1990   College graduates 11.495533\n39 2000   College graduates 10.561772\n40 2001   College graduates 10.703886\n41 2002   College graduates 10.344219\n42 2003   College graduates 10.254990\n43 2004   College graduates 10.033665\n44 2005   College graduates  9.948066\n45 2006   College graduates 10.383550\n46 2007   College graduates 10.392942\n47 2008   College graduates 10.201919\n48 2009   College graduates 10.194261\n49 2010   College graduates 10.306385\n50 2011   College graduates 10.776053\n51 2012   College graduates 10.740666\n\n\nPlotting\n\n#creating a data frame that will be used for plotting the names of education levels, I eventually used annotation function to create my graph, but I still want to leave this section here\neducation_level_labels=edu_div2%>%\n  pivot_wider(names_from=\"year\",values_from=\"divorce\")%>%\n  mutate(nrow=1:n(), #create a new column indicating which row each education level is at\n         year=if_else(nrow%%2==0,\"1990\",\"1980\"),#modulus function %% tells you the remainder, if the row is a even number (some college), we will take 1994,otherwise take 1985\n         divorce=if_else(nrow%%2==0,`1990`,`1980`))%>% \n  select(education_level,year,divorce)\neducation_level_labels%>%\n  mutate(year=as.numeric(year))\n\n# A tibble: 3 × 3\n  education_level      year divorce\n  <chr>               <dbl>   <dbl>\n1 High school or less  1980   10.4 \n2 Some college         1990   17.0 \n3 College graduates    1980    9.78\n\n\n\n#using geom_line\nplot1=edu_div2%>%\nggplot(aes(x=year,y=divorce,group=education_level,color=education_level))+\n  geom_line(linewidth=1.5,show.legend=FALSE)+\n  #geom_text(data=education_level_labels,aes(group=1,label=education_level),show.legend=FALSE)+\n  labs(title=\"Divorce Rates By \nEducation\",\n       subtitle=\"Ages 35 to 44\",\n       x=NULL,y=NULL)+\n  scale_x_continuous(breaks=seq(1960,2012,by=10),labels=c(\"1960\",\"'70\",\"'80\",\"'90\",\"2000\",\"'10\"),minor_breaks=NULL)+\n  scale_y_continuous(breaks=seq(0,25,by=5),labels=c(\"0\",\"5\",\"10\",\"15\",\"20\",\"25%\"),minor_breaks=NULL)+\n  scale_color_manual(breaks=c(\"High school or less\",\"Some College\",\"College graduates\"),values=c(\"#6699CC\",\"#0047AB\",\"#89CFF0\"))+\n  theme(\n        text=element_text(size=16),\n        plot.title=element_textbox_simple(size=14,face=\"bold\"),#control the size of title and subtitle\n        plot.subtitle=element_textbox_simple(size=12),\n        plot.background = element_rect(fill=\"#ededed\"),#change the whole plot background color\n        panel.background=element_rect(fill=\"#ededed\"),#change the panel background color\n        panel.grid.major = element_line(color=\"lightgrey\"), #change the grid color in the panel background\n        legend.position=\"none\",\n        axis.text=element_text(size=12), #specify the text size\n        axis.ticks=element_blank()       #remove all the ticks\n        )+\n  geom_hline(yintercept = 0)+ #highlight the x axis (when y=0)\n  annotate(\"text\",x=1995, y=7,label=\"High school or less\")+ #using annotate functions to add text and lines in the graph\n  annotate(\"text\",x=1995,y=22,label=\"Some college\")+\n  annotate(\"text\",x=2005,y=14,label=\"College graduate\")+\n  annotate(\"segment\",x=1990,xend=1990,y=7,yend=16,color=\"black\",size=0.7)+\n  annotate(\"segment\",x=1995,xend=1995,y=21,yend=17,color=\"black\",size=0.7)+\n  annotate(\"segment\",x=2005,xend=2005,y=13,yend=10,color=\"black\",size=0.7)+\n  coord_fixed(ratio=2, ylim=c(0,25),xlim=c(1960,2012))    #control the ratio of y/x coordinate, but also specify the limits for y&x axis in case this function overwrite the axis range\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nplot1\n\n\n\n\nmodify the graph using geom_point to indicate the data density, obviously more data was collected from year 2000-2010\n\nplot2=edu_div2%>%\nggplot(aes(x=year,y=divorce,group=education_level,color=education_level))+\n  geom_point(size=3,alpha=0.7)+\n  geom_line(linewidth=1.5,show.legend=FALSE)+\n  labs(title=\"Divorce Rates By \nEducation\",\n       subtitle=\"Ages 35 to 44\",\n       x=NULL,y=NULL)+\n  scale_x_continuous(breaks=seq(1960,2012,by=10),labels=c(\"1960\",\"'70\",\"'80\",\"'90\",\"2000\",\"'10\"),minor_breaks=NULL)+\n  scale_y_continuous(breaks=seq(0,25,by=5),labels=c(\"0\",\"5\",\"10\",\"15\",\"20\",\"25%\"),minor_breaks=NULL)+\n  scale_color_manual(breaks=c(\"High school or less\",\"Some College\",\"College graduates\"),values=c(\"#6699CC\",\"#0047AB\",\"#89CFF0\"))+\n  theme(\n        text=element_text(size=16),\n        plot.title=element_textbox_simple(size=14,face=\"bold\"),#control the size of title and subtitle\n        plot.subtitle=element_textbox_simple(size=12),\n        plot.background = element_rect(fill=\"#ededed\"),#change the whole plot background color\n        panel.background=element_rect(fill=\"#ededed\"),#change the panel background color\n        panel.grid.major = element_line(color=\"lightgrey\"), #change the grid color in the panel background\n        legend.position=\"none\",\n        axis.text=element_text(size=12), #specify the text size\n        axis.ticks=element_blank()       #remove all the ticks\n        )+\n  geom_hline(yintercept = 0)+ #highlight the x axis (when y=0)\n  annotate(\"text\",x=1995, y=7,label=\"High school or less\")+ #using annotate functions to add text and lines in the graph\n  annotate(\"text\",x=1995,y=22,label=\"Some college\")+\n  annotate(\"text\",x=2005,y=14,label=\"College graduate\")+\n  annotate(\"segment\",x=1990,xend=1990,y=7,yend=16,color=\"black\",size=0.7)+\n  annotate(\"segment\",x=1995,xend=1995,y=21,yend=17,color=\"black\",size=0.7)+\n  annotate(\"segment\",x=2005,xend=2005,y=13,yend=10,color=\"black\",size=0.7)+\n  coord_fixed(ratio=2, ylim=c(0,25),xlim=c(1960,2012))    #control the ratio of y/x coordinate, but also specify the limits for y&x axis in case this function overwrite the axis range\nplot2\n\n\n\n\nsave the plot\n\nggsave(\"plot1.pdf\",width=8,height=8,units=\"cm\")"
  },
  {
    "objectID": "exercise/code/data_processing_code/dataanalysis.html",
    "href": "exercise/code/data_processing_code/dataanalysis.html",
    "title": "data analysis exercise",
    "section": "",
    "text": "#data description This data set was found on data.cdc.gov. The data set contains the information regarding the reported botulism cases, a national notifiable disease, reported in the United states. There are five variables presented in the header: State, Year, BotType (the type of transmission), ToxinType (the type of toxin), and Count (reported cases)\n#Setup load packages\n\nlibrary(readr)#for loading csv file\nlibrary(here)#to set relative paths\n\nhere() starts at C:/Users/weifa/OneDrive/Documents/GitKraken/MADA/data analysis/Weifan-MADA-portfolio\n\nlibrary(dplyr)#for data processing and cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)#for data processing and cleaning\nlibrary(skimr)#for browsing data\nlibrary(forcats)#for processing categorical data\n\n#data loading\n\ndata_location=here(\"exercise\",\"data\",\"raw_data\",\"Botulism.csv\")\nbotulism=read_csv(data_location)\n\nRows: 2280 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): State, BotType, ToxinType\ndbl (2): Year, Count\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n#checking data\n\n#checking the variable type\nglimpse(botulism)\n\nRows: 2,280\nColumns: 5\n$ State     <chr> \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", …\n$ Year      <dbl> 1947, 1948, 1950, 1952, 1956, 1959, 1960, 1967, 1968, 1970, …\n$ BotType   <chr> \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodbor…\n$ ToxinType <chr> \"Unknown\", \"Unknown\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"Unknown…\n$ Count     <dbl> 3, 4, 5, 1, 5, 10, 2, 1, 1, 1, 2, 9, 3, 1, 2, 3, 1, 3, 3, 2,…\n\n#checking the first few row of raw data\nhead(botulism,n=10)\n\n# A tibble: 10 × 5\n   State   Year BotType   ToxinType Count\n   <chr>  <dbl> <chr>     <chr>     <dbl>\n 1 Alaska  1947 Foodborne Unknown       3\n 2 Alaska  1948 Foodborne Unknown       4\n 3 Alaska  1950 Foodborne E             5\n 4 Alaska  1952 Foodborne E             1\n 5 Alaska  1956 Foodborne E             5\n 6 Alaska  1959 Foodborne E            10\n 7 Alaska  1960 Foodborne E             2\n 8 Alaska  1967 Foodborne E             1\n 9 Alaska  1968 Foodborne Unknown       1\n10 Alaska  1970 Foodborne E             1\n\n\n#data cleaning after checking the data, R consider the numbers under Year as regular numbers (double), so we need to change it to character; Also, I consider Count as the outcome of interest, ToxinType & BotType might associate with the outcome in certain way. I am also interested in the spread of botulism-infection cases in the states and in different years.\n\n#convert Year to character\nd1=botulism%>%\n mutate(Year=as.character(Year))\n#check\nskim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n2280\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nState\n34\n0.99\n4\n14\n0\n50\n0\n\n\nYear\n0\n1.00\n4\n4\n0\n111\n0\n\n\nBotType\n0\n1.00\n5\n9\n0\n4\n0\n\n\nToxinType\n0\n1.00\n1\n7\n0\n14\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nCount\n0\n1\n3.2\n4.63\n1\n1\n1\n3\n59\n▇▁▁▁▁\n\n\n\n\nglimpse(d1)\n\nRows: 2,280\nColumns: 5\n$ State     <chr> \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", …\n$ Year      <chr> \"1947\", \"1948\", \"1950\", \"1952\", \"1956\", \"1959\", \"1960\", \"196…\n$ BotType   <chr> \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodbor…\n$ ToxinType <chr> \"Unknown\", \"Unknown\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"Unknown…\n$ Count     <dbl> 3, 4, 5, 1, 5, 10, 2, 1, 1, 1, 2, 9, 3, 1, 2, 3, 1, 3, 3, 2,…\n\n#convert Toxin type to a categorical variable\nd2=d1%>%\n  mutate(ToxinType=as_factor(ToxinType),BotType=as_factor(BotType))\n#check d2\nskim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n2280\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nfactor\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nState\n34\n0.99\n4\n14\n0\n50\n0\n\n\nYear\n0\n1.00\n4\n4\n0\n111\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nBotType\n0\n1\nFALSE\n4\nInf: 1151, Foo: 904, Wou: 152, Oth: 73\n\n\nToxinType\n0\n1\nFALSE\n14\nA: 964, B: 803, Unk: 370, E: 72\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nCount\n0\n1\n3.2\n4.63\n1\n1\n1\n3\n59\n▇▁▁▁▁\n\n\n\n\nglimpse(d2)\n\nRows: 2,280\nColumns: 5\n$ State     <chr> \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", …\n$ Year      <chr> \"1947\", \"1948\", \"1950\", \"1952\", \"1956\", \"1959\", \"1960\", \"196…\n$ BotType   <fct> Foodborne, Foodborne, Foodborne, Foodborne, Foodborne, Foodb…\n$ ToxinType <fct> \"Unknown\", \"Unknown\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"Unknown…\n$ Count     <dbl> 3, 4, 5, 1, 5, 10, 2, 1, 1, 1, 2, 9, 3, 1, 2, 3, 1, 3, 3, 2,…\n\nsummary(d2)\n\n    State               Year                BotType       ToxinType  \n Length:2280        Length:2280        Foodborne: 904   A      :964  \n Class :character   Class :character   Infant   :1151   B      :803  \n Mode  :character   Mode  :character   Wound    : 152   Unknown:370  \n                                       Other    :  73   E      : 72  \n                                                        F      : 43  \n                                                        Bf     :  8  \n                                                        (Other): 20  \n     Count       \n Min.   : 1.000  \n 1st Qu.: 1.000  \n Median : 1.000  \n Mean   : 3.199  \n 3rd Qu.: 3.000  \n Max.   :59.000  \n                 \n\n\n#save data\n\n#assign the processed data to an object called processeddata\nprocesseddata=d2\n#set a relative path for saved data\nsave_data_location=here(\"exercise\",\"data\",\"processed_data\",\"processeddata.rds\")\nsaveRDS(processeddata,file=save_data_location)"
  },
  {
    "objectID": "exercise/code/data_processing_code/dataanalysis_exercise.html#deanna-lanier-additions",
    "href": "exercise/code/data_processing_code/dataanalysis_exercise.html#deanna-lanier-additions",
    "title": "data analysis exercise",
    "section": "Deanna Lanier Additions",
    "text": "Deanna Lanier Additions\n\n# read .rds file\ndata_location=here(\"exercise\",\"data\",\"processed_data\",\"processeddata.rds\")\nprocessedData = readRDS(data_location)\n\n\n#Get Summary\nsummary(processedData)\n\n    State               Year                BotType       ToxinType  \n Length:2280        Length:2280        Foodborne: 904   A      :964  \n Class :character   Class :character   Infant   :1151   B      :803  \n Mode  :character   Mode  :character   Wound    : 152   Unknown:370  \n                                       Other    :  73   E      : 72  \n                                                        F      : 43  \n                                                        Bf     :  8  \n                                                        (Other): 20  \n     Count       \n Min.   : 1.000  \n 1st Qu.: 1.000  \n Median : 1.000  \n Mean   : 3.199  \n 3rd Qu.: 3.000  \n Max.   :59.000  \n                 \n\n\nDetermine specific years to visualize\n\nprocessedData = processedData %>% \n  mutate_at(\n    vars('Year'), \n    as_date,\n    format = \"%y\"\n    )\n\nprocessedData%>%\n  count(Year)\n\n# A tibble: 111 × 2\n   Year           n\n   <date>     <int>\n 1 1899-01-01     1\n 2 1902-01-01     1\n 3 1906-01-01     1\n 4 1910-01-01     2\n 5 1911-01-01     1\n 6 1912-01-01     3\n 7 1913-01-01     4\n 8 1914-01-01     3\n 9 1915-01-01     4\n10 1916-01-01     6\n# … with 101 more rows\n\n\nFocus on years 2000-2017\n\nprocessedData = processedData %>% filter(Year >='2000-01-01' ) \n\nprocessedData%>%\n  count(Year)\n\n# A tibble: 18 × 2\n   Year           n\n   <date>     <int>\n 1 2000-01-01    45\n 2 2001-01-01    48\n 3 2002-01-01    43\n 4 2003-01-01    38\n 5 2004-01-01    46\n 6 2005-01-01    42\n 7 2006-01-01    40\n 8 2007-01-01    48\n 9 2008-01-01    50\n10 2009-01-01    44\n11 2010-01-01    45\n12 2011-01-01    52\n13 2012-01-01    56\n14 2013-01-01    50\n15 2014-01-01    47\n16 2015-01-01    58\n17 2016-01-01    62\n18 2017-01-01    46\n\n\nWhat are the types of botulism found in this dataset?\n\nprocessedData %>% pull(BotType) %>% unique()\n\n[1] Foodborne Infant    Wound     Other    \nLevels: Foodborne Infant Wound Other\n\n\nWhat type of botulism was the most prevalent from 2000-2017\n\n#Create table of the sums of the count column based on conditions \nbotulism_2000s =  data.frame (BotType  = c(\"Foodborn\", \"Infant\", \"Wound\", \"other\"),\n                  Total = c(sum(processedData[which(processedData$BotType=='Foodborne'), 5]), sum(processedData[which(processedData$BotType=='Infant'), 5]),sum(processedData[which(processedData$BotType=='Wound'), 5]),sum(processedData[which(processedData$BotType=='Other'), 5]))\n                  )\nbotulism_2000s\n\n   BotType Total\n1 Foodborn   344\n2   Infant  1972\n3    Wound   386\n4    other    52\n\n\nInfant is the most prevalent type of botulism from 2000-2017. Followed by wound and foodborne.\nWhat is the prevalence of the types each year?\n\n#Plot Botulism types\nbotulism_plot = ggplot(processedData, aes(fill=BotType, y=Count, x=Year)) + \n    geom_bar(position=\"dodge\", stat=\"identity\")+scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\")+theme(legend.position = \"bottom\",axis.text.x = element_text(size = 10, angle=60, hjust=1))+ggtitle(\"Types of Botulism Cases between 2000 and 2017\")+theme(plot.title = element_text(hjust = 0.5))\n\nbotulism_plot\n\n\n\n\nWhat toxins are leading in infant botulism?\n\nInfant = processedData %>% filter(BotType == \"Infant\", Year >='2000-01-01' )\n\n#Plot Foodborn Botulism \ninfant_plot = ggplot(Infant, aes(fill=ToxinType, y=Count, x=Year)) + \n    geom_bar(position=\"dodge\", stat=\"identity\")+scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\")+theme(legend.position = \"bottom\",axis.text.x = element_text(size = 10, angle=60, hjust=1))+ggtitle(\"Infant Botulism types for 2000-2017\")+theme(plot.title = element_text(hjust = 0.5))\n\ninfant_plot\n\n\n\n\nThe most prominent toxin type in infant botulism between 2000 and 2017 is toxin A"
  },
  {
    "objectID": "fluanalysis/code/wrangling.html",
    "href": "fluanalysis/code/wrangling.html",
    "title": "wrangling",
    "section": "",
    "text": "#Load Library\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(skimr)\nlibrary(here)\n\nhere() starts at C:/Users/weifa/OneDrive/Documents/GitKraken/MADA/data analysis/Weifan-MADA-portfolio/fluanalysis\n\n\n#Load Data and Check Data\n\ndata_location=here(\"data\",\"SympAct_Any_Pos.Rda\")\nrawdata=readRDS(\"SympAct_Any_Pos.Rda\",file=data_location)\nhead(rawdata)\n\n                               DxName1\n1 Influenza like illness - Clinical Dx\n2       Acute tonsillitis, unspecified\n3 Influenza like illness - Clinical Dx\n4 Influenza like illness - Clinical Dx\n5       Acute pharyngitis, unspecified\n6 Influenza like illness - Clinical Dx\n                                       DxName2 DxName3 DxName4 DxName5\n1                                         <NA>    <NA>    <NA>    <NA>\n2         Influenza like illness - Clinical Dx    <NA>    <NA>    <NA>\n3               Acute pharyngitis, unspecified    <NA>    <NA>    <NA>\n4 Unspecified asthma with (acute) exacerbation    <NA>    <NA>    <NA>\n5         Influenza like illness - Clinical Dx    <NA>    <NA>    <NA>\n6                                         <NA>    <NA>    <NA>    <NA>\n  Unique.Visit ActivityLevel ActivityLevelF SwollenLymphNodes ChestCongestion\n1 340_17632125            10             10               Yes              No\n2 340_17794836             6              6               Yes             Yes\n3 342_17737773             2              2               Yes             Yes\n4 342_17806002             2              2               Yes             Yes\n5 342_17610918             5              5               Yes              No\n6 343_17543967             3              3                No              No\n  ChillsSweats NasalCongestion CoughYN Sneeze Fatigue SubjectiveFever Headache\n1           No              No     Yes     No     Yes             Yes      Yes\n2           No             Yes     Yes     No     Yes             Yes      Yes\n3          Yes             Yes      No    Yes     Yes             Yes      Yes\n4          Yes             Yes     Yes    Yes     Yes             Yes      Yes\n5          Yes              No      No     No     Yes             Yes      Yes\n6          Yes              No     Yes    Yes     Yes             Yes      Yes\n  Weakness WeaknessYN CoughIntensity CoughYN2  Myalgia MyalgiaYN RunnyNose\n1     Mild        Yes         Severe      Yes     Mild       Yes        No\n2   Severe        Yes         Severe      Yes   Severe       Yes        No\n3   Severe        Yes           Mild      Yes   Severe       Yes       Yes\n4   Severe        Yes       Moderate      Yes   Severe       Yes       Yes\n5 Moderate        Yes           None       No     Mild       Yes        No\n6 Moderate        Yes       Moderate      Yes Moderate       Yes        No\n  AbPain ChestPain Diarrhea EyePn Insomnia ItchyEye Nausea EarPn Hearing\n1     No        No       No    No       No       No     No    No      No\n2     No        No       No    No       No       No     No   Yes     Yes\n3    Yes       Yes       No    No      Yes       No    Yes    No      No\n4     No        No       No    No      Yes       No    Yes   Yes      No\n5     No        No       No   Yes      Yes       No    Yes    No      No\n6     No       Yes      Yes    No       No       No    Yes    No      No\n  Pharyngitis Breathless ToothPn Vision Vomit Wheeze BodyTemp\n1         Yes         No      No     No    No     No     98.3\n2         Yes         No      No     No    No     No    100.4\n3         Yes        Yes     Yes     No    No     No    100.8\n4         Yes         No      No     No    No    Yes     98.8\n5         Yes         No      No     No    No     No    100.5\n6         Yes        Yes      No     No    No    Yes     98.4\n                             RapidFluA                            RapidFluB\n1 Presumptive Negative For Influenza A Presumptive Negative For Influenza B\n2                                 <NA>                                 <NA>\n3 Presumptive Negative For Influenza A Presumptive Negative For Influenza B\n4 Presumptive Negative For Influenza A Presumptive Negative For Influenza B\n5                                 <NA>                                 <NA>\n6                                 <NA>                                 <NA>\n  PCRFluA PCRFluB TransScore1 TransScore1F TransScore2 TransScore2F TransScore3\n1    <NA>    <NA>           1            1           1            1           1\n2    <NA>    <NA>           3            3           2            2           1\n3    <NA>    <NA>           4            4           3            3           2\n4    <NA>    <NA>           5            5           4            4           3\n5    <NA>    <NA>           0            0           0            0           0\n6    <NA>    <NA>           2            2           2            2           2\n  TransScore3F TransScore4 TransScore4F ImpactScore ImpactScore2 ImpactScore3\n1            1           0            0           7            6            3\n2            1           2            2           8            7            4\n3            2           4            4          14           13            9\n4            3           4            4          12           11            7\n5            0           0            0          11           10            6\n6            2           1            1          12           11            7\n  ImpactScoreF ImpactScore2F ImpactScore3F ImpactScoreFD TotalSymp1 TotalSymp1F\n1            7             6             3             7          8           8\n2            8             7             4             8         11          11\n3           14            13             9            14         18          18\n4           12            11             7            12         17          17\n5           11            10             6            11         11          11\n6           12            11             7            12         14          14\n  TotalSymp2 TotalSymp3\n1          8          8\n2         10          9\n3         17         16\n4         16         15\n5         11         11\n6         14         14\n\nskim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n735\n\n\nNumber of columns\n63\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n50\n\n\nnumeric\n12\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nUnique.Visit\n0\n1\n10\n12\n0\n735\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nDxName1\n0\n1.00\nFALSE\n25\nInf: 328, Inf: 131, Fev: 101, Cou: 66\n\n\nDxName2\n280\n0.62\nFALSE\n42\nInf: 126, Inf: 115, Fev: 45, Cou: 41\n\n\nDxName3\n626\n0.15\nFALSE\n37\nInf: 23, Inf: 14, Cou: 10, Fev: 6\n\n\nDxName4\n716\n0.03\nFALSE\n14\nInf: 3, Acu: 2, Enc: 2, Inf: 2\n\n\nDxName5\n734\n0.00\nFALSE\n1\nHea: 1, Acu: 0, Enc: 0, Oth: 0\n\n\nActivityLevelF\n0\n1.00\nFALSE\n11\n3: 125, 5: 97, 4: 95, 2: 80\n\n\nSwollenLymphNodes\n0\n1.00\nFALSE\n2\nNo: 421, Yes: 314\n\n\nChestCongestion\n0\n1.00\nFALSE\n2\nYes: 409, No: 326\n\n\nChillsSweats\n0\n1.00\nFALSE\n2\nYes: 604, No: 131\n\n\nNasalCongestion\n0\n1.00\nFALSE\n2\nYes: 565, No: 170\n\n\nCoughYN\n0\n1.00\nFALSE\n2\nYes: 660, No: 75\n\n\nSneeze\n0\n1.00\nFALSE\n2\nYes: 395, No: 340\n\n\nFatigue\n0\n1.00\nFALSE\n2\nYes: 671, No: 64\n\n\nSubjectiveFever\n0\n1.00\nFALSE\n2\nYes: 505, No: 230\n\n\nHeadache\n0\n1.00\nFALSE\n2\nYes: 620, No: 115\n\n\nWeakness\n0\n1.00\nFALSE\n4\nMod: 341, Mil: 224, Sev: 121, Non: 49\n\n\nWeaknessYN\n0\n1.00\nFALSE\n2\nYes: 686, No: 49\n\n\nCoughIntensity\n0\n1.00\nFALSE\n4\nMod: 360, Sev: 172, Mil: 156, Non: 47\n\n\nCoughYN2\n0\n1.00\nFALSE\n2\nYes: 688, No: 47\n\n\nMyalgia\n0\n1.00\nFALSE\n4\nMod: 327, Mil: 214, Sev: 115, Non: 79\n\n\nMyalgiaYN\n0\n1.00\nFALSE\n2\nYes: 656, No: 79\n\n\nRunnyNose\n0\n1.00\nFALSE\n2\nYes: 524, No: 211\n\n\nAbPain\n0\n1.00\nFALSE\n2\nNo: 642, Yes: 93\n\n\nChestPain\n0\n1.00\nFALSE\n2\nNo: 501, Yes: 234\n\n\nDiarrhea\n0\n1.00\nFALSE\n2\nNo: 636, Yes: 99\n\n\nEyePn\n0\n1.00\nFALSE\n2\nNo: 622, Yes: 113\n\n\nInsomnia\n0\n1.00\nFALSE\n2\nYes: 419, No: 316\n\n\nItchyEye\n0\n1.00\nFALSE\n2\nNo: 553, Yes: 182\n\n\nNausea\n0\n1.00\nFALSE\n2\nNo: 477, Yes: 258\n\n\nEarPn\n0\n1.00\nFALSE\n2\nNo: 573, Yes: 162\n\n\nHearing\n0\n1.00\nFALSE\n2\nNo: 705, Yes: 30\n\n\nPharyngitis\n0\n1.00\nFALSE\n2\nYes: 614, No: 121\n\n\nBreathless\n0\n1.00\nFALSE\n2\nNo: 438, Yes: 297\n\n\nToothPn\n0\n1.00\nFALSE\n2\nNo: 569, Yes: 166\n\n\nVision\n0\n1.00\nFALSE\n2\nNo: 716, Yes: 19\n\n\nVomit\n0\n1.00\nFALSE\n2\nNo: 656, Yes: 79\n\n\nWheeze\n0\n1.00\nFALSE\n2\nNo: 514, Yes: 221\n\n\nRapidFluA\n407\n0.45\nFALSE\n2\nPos: 169, Pre: 159\n\n\nRapidFluB\n407\n0.45\nFALSE\n2\nPre: 302, Pos: 26\n\n\nPCRFluA\n581\n0.21\nFALSE\n3\nIn: 120, In: 33, Ind: 1, Ass: 0\n\n\nPCRFluB\n581\n0.21\nFALSE\n2\nIn: 145, In: 9, Ass: 0\n\n\nTransScore1F\n0\n1.00\nFALSE\n6\n4: 210, 5: 195, 3: 157, 2: 107\n\n\nTransScore2F\n0\n1.00\nFALSE\n5\n4: 294, 3: 201, 2: 138, 1: 89\n\n\nTransScore3F\n0\n1.00\nFALSE\n4\n3: 323, 2: 222, 1: 166, 0: 24\n\n\nTransScore4F\n0\n1.00\nFALSE\n5\n3: 230, 4: 198, 2: 154, 1: 103\n\n\nImpactScoreF\n0\n1.00\nFALSE\n17\n8: 105, 9: 104, 10: 88, 7: 84\n\n\nImpactScore2F\n0\n1.00\nFALSE\n16\n7: 107, 8: 102, 9: 90, 10: 86\n\n\nImpactScore3F\n0\n1.00\nFALSE\n14\n4: 134, 5: 112, 3: 108, 6: 102\n\n\nImpactScoreFD\n0\n1.00\nFALSE\n17\n8: 105, 9: 104, 10: 88, 7: 84\n\n\nTotalSymp1F\n0\n1.00\nFALSE\n19\n12: 86, 13: 84, 14: 80, 11: 72\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nActivityLevel\n0\n1.00\n4.46\n2.64\n0.0\n3.0\n4.0\n6.0\n10.0\n▆▇▆▅▂\n\n\nBodyTemp\n5\n0.99\n98.94\n1.20\n97.2\n98.2\n98.5\n99.3\n103.1\n▇▇▂▁▁\n\n\nTransScore1\n0\n1.00\n3.47\n1.31\n0.0\n3.0\n4.0\n5.0\n5.0\n▂▅▆▇▇\n\n\nTransScore2\n0\n1.00\n2.92\n1.11\n0.0\n2.0\n3.0\n4.0\n4.0\n▁▂▃▆▇\n\n\nTransScore3\n0\n1.00\n2.15\n0.88\n0.0\n1.0\n2.0\n3.0\n3.0\n▁▅▁▆▇\n\n\nTransScore4\n0\n1.00\n2.58\n1.21\n0.0\n2.0\n3.0\n4.0\n4.0\n▂▃▆▇▇\n\n\nImpactScore\n0\n1.00\n9.51\n2.84\n2.0\n8.0\n9.0\n11.0\n18.0\n▂▇▇▅▁\n\n\nImpactScore2\n0\n1.00\n8.58\n2.78\n2.0\n7.0\n8.0\n10.0\n17.0\n▂▇▆▃▁\n\n\nImpactScore3\n0\n1.00\n5.06\n2.34\n0.0\n3.0\n5.0\n7.0\n13.0\n▂▇▃▂▁\n\n\nTotalSymp1\n0\n1.00\n12.99\n3.41\n5.0\n11.0\n13.0\n15.0\n23.0\n▂▇▇▅▁\n\n\nTotalSymp2\n0\n1.00\n12.43\n3.22\n4.0\n10.0\n12.0\n15.0\n22.0\n▁▇▇▅▁\n\n\nTotalSymp3\n0\n1.00\n11.66\n3.10\n3.0\n10.0\n12.0\n14.0\n21.0\n▁▇▇▅▁\n\n\n\n\n\n#Clean Data\n\n#remove columns containing certain strings and drop NA values\nd1=rawdata%>%\n  select(!contains(c(\"Activity\",\"Score\",\"DXname\",\"Total\",\"FluB\",\"FluA\",\"unique\"),ignore.case = TRUE))%>%\n  drop_na()\nskim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n730\n\n\nNumber of columns\n32\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n31\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nSwollenLymphNodes\n0\n1\nFALSE\n2\nNo: 418, Yes: 312\n\n\nChestCongestion\n0\n1\nFALSE\n2\nYes: 407, No: 323\n\n\nChillsSweats\n0\n1\nFALSE\n2\nYes: 600, No: 130\n\n\nNasalCongestion\n0\n1\nFALSE\n2\nYes: 563, No: 167\n\n\nCoughYN\n0\n1\nFALSE\n2\nYes: 655, No: 75\n\n\nSneeze\n0\n1\nFALSE\n2\nYes: 391, No: 339\n\n\nFatigue\n0\n1\nFALSE\n2\nYes: 666, No: 64\n\n\nSubjectiveFever\n0\n1\nFALSE\n2\nYes: 500, No: 230\n\n\nHeadache\n0\n1\nFALSE\n2\nYes: 615, No: 115\n\n\nWeakness\n0\n1\nFALSE\n4\nMod: 338, Mil: 223, Sev: 120, Non: 49\n\n\nWeaknessYN\n0\n1\nFALSE\n2\nYes: 681, No: 49\n\n\nCoughIntensity\n0\n1\nFALSE\n4\nMod: 357, Sev: 172, Mil: 154, Non: 47\n\n\nCoughYN2\n0\n1\nFALSE\n2\nYes: 683, No: 47\n\n\nMyalgia\n0\n1\nFALSE\n4\nMod: 325, Mil: 213, Sev: 113, Non: 79\n\n\nMyalgiaYN\n0\n1\nFALSE\n2\nYes: 651, No: 79\n\n\nRunnyNose\n0\n1\nFALSE\n2\nYes: 519, No: 211\n\n\nAbPain\n0\n1\nFALSE\n2\nNo: 639, Yes: 91\n\n\nChestPain\n0\n1\nFALSE\n2\nNo: 497, Yes: 233\n\n\nDiarrhea\n0\n1\nFALSE\n2\nNo: 631, Yes: 99\n\n\nEyePn\n0\n1\nFALSE\n2\nNo: 617, Yes: 113\n\n\nInsomnia\n0\n1\nFALSE\n2\nYes: 415, No: 315\n\n\nItchyEye\n0\n1\nFALSE\n2\nNo: 551, Yes: 179\n\n\nNausea\n0\n1\nFALSE\n2\nNo: 475, Yes: 255\n\n\nEarPn\n0\n1\nFALSE\n2\nNo: 568, Yes: 162\n\n\nHearing\n0\n1\nFALSE\n2\nNo: 700, Yes: 30\n\n\nPharyngitis\n0\n1\nFALSE\n2\nYes: 611, No: 119\n\n\nBreathless\n0\n1\nFALSE\n2\nNo: 436, Yes: 294\n\n\nToothPn\n0\n1\nFALSE\n2\nNo: 565, Yes: 165\n\n\nVision\n0\n1\nFALSE\n2\nNo: 711, Yes: 19\n\n\nVomit\n0\n1\nFALSE\n2\nNo: 652, Yes: 78\n\n\nWheeze\n0\n1\nFALSE\n2\nNo: 510, Yes: 220\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nBodyTemp\n0\n1\n98.94\n1.2\n97.2\n98.2\n98.5\n99.3\n103.1\n▇▇▂▁▁\n\n\n\n\n\n#Save Data\n\nprocessed_data=d1\nsave_data_location1=here::here(\"data\",\"processed_data.rds\")\nsaveRDS(processed_data,file=save_data_location1)"
  }
]