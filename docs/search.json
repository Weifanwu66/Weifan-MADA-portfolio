[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "https://www.linkedin.com/in/weifan-wu-78604a162/\n\nBasic information\nHello everyone, my name is Weifan Wu. I am currently a third-year Ph.D. student in food science and technology. My focus is about antimicrobial activity of pomegranate against common foodborne pathogens. Welcome to connect me on Linkedin!😄\n\n\nStatistical experience\nI was first exposed to statistics due to the requirement of program of study, however, I have gradually developed deep interest in statistical analysis, especially when it’s applied to data in public health area. The statistics courses I have taken include experimental design, applied data analysis using SPSS, spatial epidemiology. Last year, I independently accomplished a spatial analysis of association of race and age with COVID-19 incidence rates on the county-level in Georgia using Bayesian spatial hierarchical generalized Linear model and disease mapping. I also use SAS to conduct basic statistics analysis (general linear model, pearson’s r) for my own research project. Therefore, I have knowledge of statistics and some experience with data analysis using softwares such as R, SPSS, SAS. Since my interests mainly lie with public health data , I would like to gain more in-depth experience with handling real-world public health data using R, which is something that I am looking forward to getting from this course.🥳\n\n\nFun fact about me\nmy eyebrows can dance!🤣\n\n\nUnknown facts about data science\nThe attached linked is about 7 surprising facts about data science. The most striking fact is that less than 0.5% of all data we create is ever analysed and used.\nhttps://www.lewagon.com/blog/data-science-facts"
  },
  {
    "objectID": "exercise/code/analysis_code/coding_exercise.html",
    "href": "exercise/code/analysis_code/coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "loading and checking data\n\n#load dslabs package\nlibrary(\"dslabs\")\n#load tidyverse package\nlibrary(\"tidyverse\")\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n#look at help file for gapminder data\nhelp(gapminder)\n\nstarting httpd help server ... done\n\n#get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#get a summary of data structure\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#determine type of objective gapminder is\nclass(gapminder)\n\n[1] \"data.frame\"\n\n\nprocessing data\n\n#assign African countries to a new object\nafricadata=filter(gapminder,continent==\"Africa\")\n#get an overview of data structure of africadata\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of data structure\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n#create a data frame that only contains infant_mortality and life_expectancy from africadata\ninfant_mortality_longevity=select(africadata,infant_mortality,life_expectancy)\n#create a data frame that only contains population and life_expectancy\npop_longevity=select(africadata,population,life_expectancy)\n#create a data frame that only contains infant_mortality and life_expectancy from africadata\ninfant_mortality_longevity=select(africadata,infant_mortality,life_expectancy)\n#create a data frame that only contains population and life_expectancy\npop_longevity=select(africadata,population,life_expectancy)\n\nplotting\n\n#plot life expectancy as a function of infant mortality\nggplot(data=infant_mortality_longevity)+\ngeom_point(mapping=aes(x=infant_mortality,y=life_expectancy),color=\"blue\")+\n  labs(title=\"life expectancy and infant mortality\",x=\"infant mortality\",y=\"life expectancy\")+\n  theme_minimal()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n#plot life expectancy as a function of population size\nggplot(data=pop_longevity)+\n  geom_point(mapping=aes(x=population, y=life_expectancy),color=\"green\")+\n  scale_x_log10()+\n  labs(title=\"life expectancy and infant mortality\",x=\"infant_mortality\",y=\"life expectancy\")+\n  theme_minimal()\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n#filter out the year without missing values and create a data frame contains the year and count\ndataframe=filter(africadata,is.na(infant_mortality))%>%\n  group_by(year)%>%\n  count(year)\ndataframe\n\n# A tibble: 23 × 2\n# Groups:   year [23]\n    year     n\n   <int> <int>\n 1  1960    10\n 2  1961    17\n 3  1962    16\n 4  1963    16\n 5  1964    15\n 6  1965    14\n 7  1966    13\n 8  1967    11\n 9  1968    11\n10  1969     7\n# … with 13 more rows\n\n#create a new data frame containg the data for the year 2000\nyear2000=filter(africadata,year==2000)\n#get a overview of new data frame year2000\nstr(year2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n#get a summary of year2000\nsummary(year2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\n\n#plotting the relationship between life expectancy and infant mortality for year 2000\nyear2000%>%\n  ggplot()+\n  geom_point(aes(y=life_expectancy,x=infant_mortality),color=\"blue\")+\n  labs(x=\"infant mortality\", y=\"life expectancy\", title=\"relationship between infant mortality and life expectancy\")+\n  theme_minimal()\n\n\n\n#plotting the relationship between life expectancy and population size for year 2000\nyear2000%>%\n  ggplot()+\n  geom_point(aes(y=life_expectancy,x=population),color=\"green\",alpha=0.5)+\n  scale_x_log10()+\n  labs(x=\"population size on log scale\",y=\"life expectancy\", title=\"relationship between life expectancy and populaton size\")+\n  theme_minimal()\n\n\n\n\nbuild a linear regression model to predict life expectancy\n\n#build a linear model using lm function and fit life expectancy as outcome, and infant mortality as the predictor\nlm1=lm(life_expectancy~infant_mortality,data=year2000)\n#summary of linear regression model 1\nsummary(lm1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = year2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      71.29331    2.42611  29.386  < 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n#build a linear model using lm function and fit life expectancy as outcome, and population size as the predictor\nlm2=lm(life_expectancy~population,data=year2000)\n#summary of linear regression model 1\nbroom::tidy(lm2,conf.int=TRUE)%>%\n  knitr::kable(digits=3)\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\nconf.low\nconf.high\n\n\n\n\n(Intercept)\n55.931\n1.468\n38.097\n0.000\n52.981\n58.881\n\n\npopulation\n0.000\n0.000\n0.505\n0.616\n0.000\n0.000\n\n\n\n\n\nbased on the p_value for each fit, we can see that infant mortality can significantly predict life expectancy whereas population size can not predict the life expectancy\n\n\n\n\n\n\nAidan Troha Edits\n\n\n::: {.cell}\n\n\n```{.r .cell-code} # Creates a new data frame which removes rows without reported gdp data & # groups based on region africa_GDP <- africadata %>% filter(!(is.na(gdp))) %>% group_by(region)\n\n\n# Plots a “LOESS” model predicting log-scale GDP over time by region ggplot(africa_GDP,aes(x=year,y=log(gdp),color=region,fill=region)) + geom_smooth(alpha=0.15) + labs(y=“Log scale GDP”,title=“GDP Growth Over 50 Year Period by Region”) ```\n\n\n::: {.cell-output .cell-output-stderr}\n\n\n::: {.cell-output-display}  ::: :::\n\n\n::: {.cell}\n\n\n{.r .cell-code} # Plots a violin plot displaying the distribution of life expectancies # according to region ggplot(aes(region,life_expectancy,fill=region),data=africa_GDP)+ geom_violin() + scale_x_discrete(labels = NULL, breaks = NULL) + labs(x=NULL,y=\"Life Expectancy\",title=\"Life Expectancy Distributed by Region\")\n\n\n::: {.cell-output-display}  ::: :::\n\n\n::: {.cell}\n\n\n```{.r .cell-code} # Fits a linear regression model using log-scale gdp to predict life expectancy lm3 <- lm(life_expectancy~log(gdp),data=africa_GDP)\n\n\n#summary of linear regression model 3 summary(lm3) ```\n\n\n::: {.cell-output .cell-output-stdout} ```\n\n\nCall: lm(formula = life_expectancy ~ log(gdp), data = africa_GDP)\n\n\nResiduals: Min 1Q Median 3Q Max -38.967 -5.343 -0.774 4.519 21.213\n\n\nCoefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 14.9595 2.3599 6.339 2.78e-10  log(gdp) 1.8162 0.1086 16.721 < 2e-16 \n\n\n\nSignif. codes: 0 ‘’ 0.001 ’’ 0.01 ’’ 0.05 ‘.’ 0.1 ’ ’ 1\nResidual standard error: 7.93 on 2268 degrees of freedom Multiple R-squared: 0.1097, Adjusted R-squared: 0.1094 F-statistic: 279.6 on 1 and 2268 DF, p-value: < 2.2e-16 ``` ::: :::"
  },
  {
    "objectID": "exercise/code/data_processing_code/dataanalysis_exercise.html",
    "href": "exercise/code/data_processing_code/dataanalysis_exercise.html",
    "title": "data analysis exercise",
    "section": "",
    "text": "#data description This data set was found on data.cdc.gov. The data set contains the information regarding the reported botulism cases, a national notifiable disease, reported in the United states. There are five variables presented in the header: State, Year, BotType (the type of transmission), ToxinType (the type of toxin), and Count (reported cases)\n#Setup load packages\n#data loading\n#checking data\n#data cleaning after checking the data, R consider the numbers under Year as regular numbers (double), so we need to change it to character; Also, I consider Count as the outcome of interest, ToxinType & BotType might associate with the outcome in certain way. I am also interested in the spread of botulism-infection cases in the states and in different years.\n#save data"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "The plot that I try to reproduce here is from fivethirtyeight.com. The marriage isn’t dead-yet. It depicts the marriage rates by education and race in the age group from 25 to 34"
  },
  {
    "objectID": "exercise/code/data_processing_code/dataanalysis.html",
    "href": "exercise/code/data_processing_code/dataanalysis.html",
    "title": "data analysis exercise",
    "section": "",
    "text": "#data description This data set was found on data.cdc.gov. The data set contains the information regarding the reported botulism cases, a national notifiable disease, reported in the United states. There are five variables presented in the header: State, Year, BotType (the type of transmission), ToxinType (the type of toxin), and Count (reported cases)\n#Setup load packages\n\nlibrary(readr)#for loading csv file\nlibrary(here)#to set relative paths\n\nhere() starts at C:/Users/weifa/OneDrive/Documents/GitKraken/MADA/data analysis/Weifan-MADA-portfolio\n\nlibrary(dplyr)#for data processing and cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)#for data processing and cleaning\nlibrary(skimr)#for browsing data\nlibrary(forcats)#for processing categorical data\n\n#data loading\n\ndata_location=here(\"exercise\",\"data\",\"raw_data\",\"Botulism.csv\")\nbotulism=read_csv(data_location)\n\nRows: 2280 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): State, BotType, ToxinType\ndbl (2): Year, Count\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n#checking data\n\n#checking the variable type\nglimpse(botulism)\n\nRows: 2,280\nColumns: 5\n$ State     <chr> \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", …\n$ Year      <dbl> 1947, 1948, 1950, 1952, 1956, 1959, 1960, 1967, 1968, 1970, …\n$ BotType   <chr> \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodbor…\n$ ToxinType <chr> \"Unknown\", \"Unknown\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"Unknown…\n$ Count     <dbl> 3, 4, 5, 1, 5, 10, 2, 1, 1, 1, 2, 9, 3, 1, 2, 3, 1, 3, 3, 2,…\n\n#checking the first few row of raw data\nhead(botulism,n=10)\n\n# A tibble: 10 × 5\n   State   Year BotType   ToxinType Count\n   <chr>  <dbl> <chr>     <chr>     <dbl>\n 1 Alaska  1947 Foodborne Unknown       3\n 2 Alaska  1948 Foodborne Unknown       4\n 3 Alaska  1950 Foodborne E             5\n 4 Alaska  1952 Foodborne E             1\n 5 Alaska  1956 Foodborne E             5\n 6 Alaska  1959 Foodborne E            10\n 7 Alaska  1960 Foodborne E             2\n 8 Alaska  1967 Foodborne E             1\n 9 Alaska  1968 Foodborne Unknown       1\n10 Alaska  1970 Foodborne E             1\n\n\n#data cleaning after checking the data, R consider the numbers under Year as regular numbers (double), so we need to change it to character; Also, I consider Count as the outcome of interest, ToxinType & BotType might associate with the outcome in certain way. I am also interested in the spread of botulism-infection cases in the states and in different years.\n\n#convert Year to character\nd1=botulism%>%\n mutate(Year=as.character(Year))\n#check\nskim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n2280\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nState\n34\n0.99\n4\n14\n0\n50\n0\n\n\nYear\n0\n1.00\n4\n4\n0\n111\n0\n\n\nBotType\n0\n1.00\n5\n9\n0\n4\n0\n\n\nToxinType\n0\n1.00\n1\n7\n0\n14\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nCount\n0\n1\n3.2\n4.63\n1\n1\n1\n3\n59\n▇▁▁▁▁\n\n\n\n\nglimpse(d1)\n\nRows: 2,280\nColumns: 5\n$ State     <chr> \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", …\n$ Year      <chr> \"1947\", \"1948\", \"1950\", \"1952\", \"1956\", \"1959\", \"1960\", \"196…\n$ BotType   <chr> \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodborne\", \"Foodbor…\n$ ToxinType <chr> \"Unknown\", \"Unknown\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"Unknown…\n$ Count     <dbl> 3, 4, 5, 1, 5, 10, 2, 1, 1, 1, 2, 9, 3, 1, 2, 3, 1, 3, 3, 2,…\n\n#convert Toxin type to a categorical variable\nd2=d1%>%\n  mutate(ToxinType=as_factor(ToxinType),BotType=as_factor(BotType))\n#check d2\nskim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n2280\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nfactor\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nState\n34\n0.99\n4\n14\n0\n50\n0\n\n\nYear\n0\n1.00\n4\n4\n0\n111\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nBotType\n0\n1\nFALSE\n4\nInf: 1151, Foo: 904, Wou: 152, Oth: 73\n\n\nToxinType\n0\n1\nFALSE\n14\nA: 964, B: 803, Unk: 370, E: 72\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nCount\n0\n1\n3.2\n4.63\n1\n1\n1\n3\n59\n▇▁▁▁▁\n\n\n\n\nglimpse(d2)\n\nRows: 2,280\nColumns: 5\n$ State     <chr> \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", \"Alaska\", …\n$ Year      <chr> \"1947\", \"1948\", \"1950\", \"1952\", \"1956\", \"1959\", \"1960\", \"196…\n$ BotType   <fct> Foodborne, Foodborne, Foodborne, Foodborne, Foodborne, Foodb…\n$ ToxinType <fct> \"Unknown\", \"Unknown\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"Unknown…\n$ Count     <dbl> 3, 4, 5, 1, 5, 10, 2, 1, 1, 1, 2, 9, 3, 1, 2, 3, 1, 3, 3, 2,…\n\nsummary(d2)\n\n    State               Year                BotType       ToxinType  \n Length:2280        Length:2280        Foodborne: 904   A      :964  \n Class :character   Class :character   Infant   :1151   B      :803  \n Mode  :character   Mode  :character   Wound    : 152   Unknown:370  \n                                       Other    :  73   E      : 72  \n                                                        F      : 43  \n                                                        Bf     :  8  \n                                                        (Other): 20  \n     Count       \n Min.   : 1.000  \n 1st Qu.: 1.000  \n Median : 1.000  \n Mean   : 3.199  \n 3rd Qu.: 3.000  \n Max.   :59.000  \n                 \n\n\n#save data\n\n#assign the processed data to an object called processeddata\nprocesseddata=d2\n#set a relative path for saved data\nsave_data_location=here(\"exercise\",\"data\",\"processed_data\",\"processeddata.rds\")\nsaveRDS(processeddata,file=save_data_location)"
  },
  {
    "objectID": "exercise/code/data_processing_code/dataanalysis_exercise.html#deanna-lanier-additions",
    "href": "exercise/code/data_processing_code/dataanalysis_exercise.html#deanna-lanier-additions",
    "title": "data analysis exercise",
    "section": "Deanna Lanier Additions",
    "text": "Deanna Lanier Additions\n\n# read .rds file\ndata_location=here(\"exercise\",\"data\",\"processed_data\",\"processeddata.rds\")\nprocessedData = readRDS(data_location)\n\n\n#Get Summary\nsummary(processedData)\n\n    State               Year                BotType       ToxinType  \n Length:2280        Length:2280        Foodborne: 904   A      :964  \n Class :character   Class :character   Infant   :1151   B      :803  \n Mode  :character   Mode  :character   Wound    : 152   Unknown:370  \n                                       Other    :  73   E      : 72  \n                                                        F      : 43  \n                                                        Bf     :  8  \n                                                        (Other): 20  \n     Count       \n Min.   : 1.000  \n 1st Qu.: 1.000  \n Median : 1.000  \n Mean   : 3.199  \n 3rd Qu.: 3.000  \n Max.   :59.000  \n                 \n\n\nDetermine specific years to visualize\n\nprocessedData = processedData %>% \n  mutate_at(\n    vars('Year'), \n    as_date,\n    format = \"%y\"\n    )\n\nprocessedData%>%\n  count(Year)\n\n# A tibble: 111 × 2\n   Year           n\n   <date>     <int>\n 1 1899-01-01     1\n 2 1902-01-01     1\n 3 1906-01-01     1\n 4 1910-01-01     2\n 5 1911-01-01     1\n 6 1912-01-01     3\n 7 1913-01-01     4\n 8 1914-01-01     3\n 9 1915-01-01     4\n10 1916-01-01     6\n# … with 101 more rows\n\n\nFocus on years 2000-2017\n\nprocessedData = processedData %>% filter(Year >='2000-01-01' ) \n\nprocessedData%>%\n  count(Year)\n\n# A tibble: 18 × 2\n   Year           n\n   <date>     <int>\n 1 2000-01-01    45\n 2 2001-01-01    48\n 3 2002-01-01    43\n 4 2003-01-01    38\n 5 2004-01-01    46\n 6 2005-01-01    42\n 7 2006-01-01    40\n 8 2007-01-01    48\n 9 2008-01-01    50\n10 2009-01-01    44\n11 2010-01-01    45\n12 2011-01-01    52\n13 2012-01-01    56\n14 2013-01-01    50\n15 2014-01-01    47\n16 2015-01-01    58\n17 2016-01-01    62\n18 2017-01-01    46\n\n\nWhat are the types of botulism found in this dataset?\n\nprocessedData %>% pull(BotType) %>% unique()\n\n[1] Foodborne Infant    Wound     Other    \nLevels: Foodborne Infant Wound Other\n\n\nWhat type of botulism was the most prevalent from 2000-2017\n\n#Create table of the sums of the count column based on conditions \nbotulism_2000s =  data.frame (BotType  = c(\"Foodborn\", \"Infant\", \"Wound\", \"other\"),\n                  Total = c(sum(processedData[which(processedData$BotType=='Foodborne'), 5]), sum(processedData[which(processedData$BotType=='Infant'), 5]),sum(processedData[which(processedData$BotType=='Wound'), 5]),sum(processedData[which(processedData$BotType=='Other'), 5]))\n                  )\nbotulism_2000s\n\n   BotType Total\n1 Foodborn   344\n2   Infant  1972\n3    Wound   386\n4    other    52\n\n\nInfant is the most prevalent type of botulism from 2000-2017. Followed by wound and foodborne.\nWhat is the prevalence of the types each year?\n\n#Plot Botulism types\nbotulism_plot = ggplot(processedData, aes(fill=BotType, y=Count, x=Year)) + \n    geom_bar(position=\"dodge\", stat=\"identity\")+scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\")+theme(legend.position = \"bottom\",axis.text.x = element_text(size = 10, angle=60, hjust=1))+ggtitle(\"Types of Botulism Cases between 2000 and 2017\")+theme(plot.title = element_text(hjust = 0.5))\n\nbotulism_plot\n\n\n\n\nWhat toxins are leading in infant botulism?\n\nInfant = processedData %>% filter(BotType == \"Infant\", Year >='2000-01-01' )\n\n#Plot Foodborn Botulism \ninfant_plot = ggplot(Infant, aes(fill=ToxinType, y=Count, x=Year)) + \n    geom_bar(position=\"dodge\", stat=\"identity\")+scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\")+theme(legend.position = \"bottom\",axis.text.x = element_text(size = 10, angle=60, hjust=1))+ggtitle(\"Infant Botulism types for 2000-2017\")+theme(plot.title = element_text(hjust = 0.5))\n\ninfant_plot\n\n\n\n\nThe most prominent toxin type in infant botulism between 2000 and 2017 is toxin A"
  }
]